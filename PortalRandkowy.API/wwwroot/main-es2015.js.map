{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_guards/auth.guard.ts","./src/app/_guards/prevent-unsaved-changes.guard.ts","./src/app/_models/pagination.ts","./src/app/_pipes/time-ago-pipe.ts","./src/app/_resolvers/likes.resolver.ts","./src/app/_resolvers/messages.resolver.ts","./src/app/_resolvers/user-detail.resolver.ts","./src/app/_resolvers/user-edit.resolver.ts","./src/app/_resolvers/user-list.resolver.ts","./src/app/_services/alertify.service.ts","./src/app/_services/auth.service.ts","./src/app/_services/error.interceptor.ts","./src/app/_services/user.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/likes/likes.component.ts","./src/app/likes/likes.component.html","./src/app/messages/messages.component.ts","./src/app/messages/messages.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/routes.ts","./src/app/user/user-card/user-card.component.ts","./src/app/user/user-card/user-card.component.html","./src/app/user/user-detail/user-detail.component.ts","./src/app/user/user-detail/user-detail.component.html","./src/app/user/user-edit/user-edit.component.ts","./src/app/user/user-edit/user-edit.component.html","./src/app/user/user-list/user-list.component.ts","./src/app/user/user-list/user-list.component.html","./src/app/user/user-messages/user-messages.component.ts","./src/app/user/user-messages/user-messages.component.html","./src/app/user/user-photos/user-photos.component.ts","./src/app/user/user-photos/user-photos.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  \n  constructor(private authService: AuthService, private router: Router, \n    public alertify: AlertifyService) {}\n  \n  canActivate(): boolean {\n\n    if(this.authService.loggedIn()){\n      return true;\n    }\n\n    this.alertify.error('Nie masz uprawnień')\n    this.router.navigate(['/home']);\n    return false;\n  }\n\n  \n}\n","import { UserEditComponent } from '../user/user-edit/user-edit.component';\r\nimport { CanDeactivate } from '@angular/router';\r\n\r\nexport class PreventUnsavedChanges implements CanDeactivate<UserEditComponent> {\r\n    canDeactivate(component: UserEditComponent) {\r\n        if(component.editForm.dirty) {\r\n            return confirm('Nie zapisałeś zmian');\r\n        }\r\n        return true;\r\n    }\r\n}","export interface Pagination {\n   currentPage: number;\n   itemsPerPage: number;\n   totalItems: number;\n   totalPages: number;\n\n}\n\nexport class PaginationResult<T> {\n  result: T;\n  pagination: Pagination;\n}\n","import {Pipe, PipeTransform, NgZone, ChangeDetectorRef, OnDestroy} from '@angular/core';\r\n@Pipe({\r\n    name: 'timeAgo',\r\n    pure: false\r\n})\r\nexport class TimeAgoPipe implements PipeTransform, OnDestroy {\r\n   \r\n    private timer: number;\r\n\r\n    constructor(private changeDetectorRef: ChangeDetectorRef, private ngZone: NgZone) {}\r\n\r\n    transform(value: string) {\r\n        this.removeTimer();\r\n        const d = new Date(value);\r\n        const now = new Date();\r\n        const seconds = Math.round(Math.abs((now.getTime() - d.getTime()) / 1000));\r\n        const timeToUpdate = (Number.isNaN(seconds)) ? 1000 : this.getSecondsUntilUpdate(seconds) * 1000;\r\n\r\n        this.timer = this.ngZone.runOutsideAngular(() => {\r\n            if (typeof window !== 'undefined') {\r\n                return window.setTimeout(() => {\r\n                    this.ngZone.run(() => this.changeDetectorRef.markForCheck());\r\n                }, timeToUpdate);\r\n            }\r\n            return null;\r\n        });\r\n\r\n        const minutes = Math.round(Math.abs(seconds / 60));\r\n        const hours = Math.round(Math.abs(minutes / 60));\r\n        const days = Math.round(Math.abs(hours / 24));\r\n        const months = Math.round(Math.abs(days / 30.416));\r\n        const years = Math.round(Math.abs(days / 365));\r\n\r\n        if (Number.isNaN(seconds)){\r\n            return '';\r\n        } else if (seconds <= 45) {\r\n            return 'kilka sekund temu';\r\n        } else if (seconds <= 90) {\r\n            return 'minutę temu';\r\n        } else if (minutes <= 45) {\r\n            return minutes + ' minut(y) temu';\r\n        } else if (minutes <= 90) {\r\n            return 'godzinę temu';\r\n        } else if (hours <= 22) {\r\n            return hours + ' godzin(y) temu';\r\n        } else if (hours <= 36) {\r\n            return 'dzień temu';\r\n        } else if (days <= 25) {\r\n            return days + ' dni temu';\r\n        } else if (days <= 45) {\r\n            return 'miesiąc temu';\r\n        } else if (days <= 345) {\r\n            return months + ' miesiące(y) temu';\r\n        } else if (days <= 545) {\r\n            return 'rok temu';\r\n        } else {                        // (days > 545)\r\n            return years + ' lata temu';\r\n        }\r\n    }\r\n    ngOnDestroy(): void {\r\n        this.removeTimer();\r\n    }\r\n    private removeTimer() {\r\n        if (this.timer) {\r\n            window.clearTimeout(this.timer);\r\n            this.timer = null;\r\n        }\r\n    }\r\n    private getSecondsUntilUpdate(seconds:number) {\r\n        const min = 60;\r\n        const hr = min * 60;\r\n        const day = hr * 24;\r\n        if (seconds < min) {            // less than 1 min, update every 2 secs\r\n            return 2;\r\n        } else if (seconds < hr) {      // less than an hour, update every 30 secs\r\n            return 30;\r\n        } else if (seconds < day) {     // less then a day, update every 5 mins\r\n            return 300;\r\n        } else {                        // update every hour\r\n            return 3600;\r\n        }\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { from, Observable, of } from 'rxjs';\r\nimport { User } from '../_models/user';\r\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n\r\n@Injectable()\r\nexport class LikesResolver implements Resolve<User[]> {\r\n    \r\n    pageNumber = 1;\r\n    pageSize = 24;\r\n    likesParam = 'UserLikes';\r\n\r\n    constructor(private userService: UserService, \r\n                 private router: Router, \r\n                 private alertify: AlertifyService) {}\r\n                \r\n    resolve(route: ActivatedRouteSnapshot): Observable<User[]>  {\r\n        return this.userService.GetUsers(this.pageNumber, this.pageSize, null,this.likesParam).pipe(\r\n            catchError(error =>{\r\n              this.alertify.error('Problem z pobraniem danych');\r\n              this.router.navigate(['']);\r\n              return of(null);\r\n            })\r\n        );\r\n    }      \r\n\r\n    }\r\n    ","import { Injectable } from '@angular/core';\r\nimport { from, Observable, of } from 'rxjs';\r\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Message } from 'src/app/_models/message';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n\r\n@Injectable()\r\nexport class MessagesResolver implements Resolve<Message[]> {\r\n    \r\n    pageNumber = 1;\r\n    pageSize = 12;\r\n    messageContainer = 'Nieprzeczytane'; \r\n\r\n    constructor(private userService: UserService, \r\n                 private router: Router, \r\n                 private alertify: AlertifyService,\r\n                 private authService: AuthService) {}\r\n                \r\n    resolve(route: ActivatedRouteSnapshot): Observable<Message[]>  {\r\n        return this.userService.GetMessages(this.authService.decodedToken.nameid, this.pageNumber, \r\n                                            this.pageSize, this.messageContainer).pipe(\r\n            catchError(error =>{\r\n              this.alertify.error('Problem z wyszukiwaniem wiadomości');\r\n              this.router.navigate(['/home']);\r\n              return of(null);\r\n            })\r\n        );\r\n    }    \r\n    \r\n    \r\n\r\n    }\r\n    \r\n","import { Injectable } from '@angular/core';\r\n    import { from, Observable, of } from 'rxjs';\r\nimport { User } from '../_models/user';\r\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { Route } from '@angular/compiler/src/core';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n\r\n@Injectable()\r\nexport class UserDetailResolver implements Resolve<User> {\r\n    \r\n    constructor(private userService: UserService, \r\n                 private router: Router, \r\n                 private alertify: AlertifyService) {}\r\n                 \r\n    resolve(route: ActivatedRouteSnapshot): Observable<User>  {\r\n        return this.userService.GetUser(route.params.id).pipe(\r\n            catchError(error =>{\r\n              this.alertify.error('Problem z pobraniem danych');\r\n              this.router.navigate(['/użytkownicy']);\r\n              return of(null);\r\n            })\r\n        );\r\n    }\r\n\r\n     \r\n                 \r\n\r\n    }\r\n    \r\n","import { Injectable } from '@angular/core';\r\n    import { from, Observable, of } from 'rxjs';\r\nimport { User } from '../_models/user';\r\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { Route } from '@angular/compiler/src/core';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n\r\n@Injectable()\r\nexport class UserEditResolver implements Resolve<User> {\r\n    \r\n    constructor(private userService: UserService, \r\n                 private router: Router, \r\n                 private alertify: AlertifyService,\r\n                 private authService: AuthService) {}\r\n               \r\n           \r\n    resolve(route: ActivatedRouteSnapshot): Observable<User>  {\r\n        return this.userService.GetUser(this.authService.decodedToken.nameid).pipe(\r\n            catchError(error =>{\r\n              this.alertify.error('Problem z pobraniem danych');\r\n              this.router.navigate(['']);\r\n              return of(null);\r\n            })\r\n        );\r\n    }\r\n\r\n     \r\n                 \r\n\r\n    }\r\n    \r\n","import { Injectable } from '@angular/core';\r\n    import { from, Observable, of } from 'rxjs';\r\nimport { User } from '../_models/user';\r\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n\r\n@Injectable()\r\nexport class UserListResolver implements Resolve<User[]> {\r\n    \r\n    pageNumber = 1;\r\n    pageSize = 16;\r\n\r\n    constructor(private userService: UserService, \r\n                 private router: Router, \r\n                 private alertify: AlertifyService) {}\r\n                \r\n    resolve(route: ActivatedRouteSnapshot): Observable<User[]>  {\r\n        return this.userService.GetUsers(this.pageNumber, this.pageSize).pipe(\r\n            catchError(error =>{\r\n              this.alertify.error('Problem z pobraniem danych');\r\n              this.router.navigate(['']);\r\n              return of(null);\r\n            })\r\n        );\r\n    }      \r\n\r\n    }\r\n    \r\n","import { Injectable } from '@angular/core';\nimport { ok } from 'assert';\n\ndeclare let alertify: any;\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertifyService {\n\n  constructor() { }\n\n  success(message: string) {\n    alertify.success(message)\n  }\n\n  error(message: string) {\n    alertify.error(message)\n  }\n\n  warning(message: string) {\n    alertify.warning(message)\n  }\n\n  message(message: string) {\n    alertify.message(message);\n  }\n\n  confirm(message: string, okCallback: () =>any) {\n    alertify.confirm(message, (e) => {\n      if(e) {\n        okCallback();\n      }\n      else {}\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { JwtHelperService} from '@auth0/angular-jwt';\nimport { logging } from 'protractor';\nimport { map } from 'rxjs/operators';\nimport { from } from 'rxjs';\nimport { decode } from 'punycode';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/user';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  baseUrl = environment.apiUrl + 'auth';\n  jwtHelper = new JwtHelperService();\n  decodedToken: any;\n  currentUser: User;\n  photoUrl = new BehaviorSubject<string>('../../assets/user.png');\n  currentPhotoUrl = this.photoUrl.asObservable();\n\n\n  constructor(private http: HttpClient) { }\n\n  changeUserPhoto(photoUrl: string) {\n    this.photoUrl.next(photoUrl);\n  }\n\n  login(model: any) {\n    return this.http.post(this.baseUrl + '/login', model).pipe(map((response: any) => {\n        const user = response;\n        if (user) {\n          localStorage.setItem('token', user.token);\n          localStorage.setItem('user', JSON.stringify(user.user));\n          this.decodedToken = this.jwtHelper.decodeToken(user.token);\n          this.currentUser = user.user;\n          this.changeUserPhoto(this.currentUser.photoUrl);\n        }\n      }));\n  }\n\n  register(user: User) {\n    return this.http.post(this.baseUrl+ '/register', user); \n  }\n\n  loggedIn() {\n    const token = localStorage.getItem('token');\n\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpInterceptor, HttpHandler, HttpRequest, HttpEvent, HttpErrorResponse, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AlertifyService } from './alertify.service';\r\n\r\n@Injectable()\r\nexport class Errorinterceptor implements HttpInterceptor{\r\n    \r\n    constructor(public alertify: AlertifyService) {}\r\n    \r\n    intercept(req: HttpRequest<any>, next: HttpHandler ): Observable<HttpEvent<any>> {\r\n     return next.handle(req).pipe(\r\n         catchError(error => {\r\n             if(error instanceof HttpErrorResponse) \r\n             {\r\n               const applicationError = error.headers.get('Application-Error');\r\n\r\n               if(applicationError)\r\n               {\r\n                   this.alertify.error(applicationError);\r\n                   return throwError(applicationError);\r\n               }\r\n\r\n               const serverError = error.error;\r\n               let errors = '';\r\n\r\n               if(serverError && typeof serverError == \"object\")\r\n               {\r\n                   for(const key in serverError)\r\n                   {\r\n                       if(serverError[key]) \r\n                       {\r\n                           errors += serverError[key]+ ', \\n';\r\n                       }\r\n                   }\r\n               }\r\n               return throwError(errors || serverError || 'Server Error');\r\n             }\r\n         })\r\n     );\r\n    }\r\n\r\n}\r\n\r\nexport const ErrorInterceptorProvider = {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: Errorinterceptor,\r\n    multi: true\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models/user';\nimport { PaginationResult } from '../_models/pagination';\nimport { map } from 'rxjs/operators';\nimport { Message } from 'src/app/_models/message';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  baseUrl = environment.apiUrl + 'users';\n\n\n  constructor(private http: HttpClient) { }\n\n  GetUsers(page?, itemsPerPage?, userParams?, likesParam?): Observable<PaginationResult<User[]>>{\n\n    const paginationResult: PaginationResult<User[]> = new PaginationResult<User[]>();\n    let params = new HttpParams();\n\n    if(page != null && itemsPerPage !=null) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    }\n\n    if (userParams != null ) {\n      params = params.append('minAge', userParams.minAge);\n      params = params.append('maxAge', userParams.maxAge);\n      params = params.append('gender', userParams.gender);\n      params = params.append('orderBy', userParams.orderBy);\n    }\n\n    if (likesParam === 'UserLikes') {\n      params = params.append('UserLikes', 'true');\n    }\n    if (likesParam === 'UserIsLiked') {\n      params = params.append('UserIsLiked', 'true');\n    }\n\n\n    return this.http.get<User[]>(this.baseUrl, {observe: 'response', params})\n    .pipe(\n       map(response => {\n         paginationResult.result = response.body;\n        if(response.headers.get('Pagination') != null) {\n          paginationResult.pagination = JSON.parse(response.headers.get('Pagination'))\n        }\n\n        return paginationResult;\n       })\n    )\n  }\n\n  GetUser(id: number): Observable<User> {\n    return this.http.get<User>(this.baseUrl +'/'+ id);\n  }\n\n  UpdateUser(id: number, user: User) {\n    return this.http.put(this.baseUrl +'/'+ id, user);\n  }\n  SetMainPhoto(id : number, idPhoto: number) {\n    return this.http.post(this.baseUrl +'/'+ id +'/photos/'+ idPhoto + '/SetMain', {});\n  }\n\n  DeletePhoto(id : number, idPhoto: number) {\n    return this.http.delete(this.baseUrl + '/' + id + '/photos/' + idPhoto );\n  }\n\n  SendLike(id: number, recipientId: number) {\n    return this.http.post(this.baseUrl + '/'  + id + '/like/' + recipientId, {});\n  }\n\n  GetMessages(id: number, page?, itemsPerPage?, messageContainer?) {\n    const paginationResult: PaginationResult<Message[]> = new PaginationResult<Message[]>();\n\n    let params = new HttpParams();\n\n    params = params.append('MessageContainer', messageContainer);\n\n    if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    }\n\n    return this.http.get<Message[]>(this.baseUrl +\"/\"+ id + \"/messages\", { observe: 'response', params })\n      .pipe(\n        map(response => {\n          paginationResult.result = response.body;\n\n          if (response.headers.get('Pagination') != null) {\n            paginationResult.pagination = JSON.parse(response.headers.get('Pagination'))\n          }\n\n          return paginationResult;\n        })\n      )\n\n  }\n\n  GetMessageThread(id: number, recipientId: number) {\n    return this.http.get<Message[]>(this.baseUrl + \"/\" + id + \"/messages/thread/\" + recipientId);\n  }\n\n  SendMessage(id: number, message: Message) {\n    return this.http.post(this.baseUrl + \"/\" + id + \"/messages\", message);\n  }\n\n  DeleteMessage(id: number, messageId: number) {\n    return this.http.post(this.baseUrl +\"/\"+ id +\"/messages/\"+ messageId, {});\n  }\n\n  MarkAsRead(userId: number, messageId: number) {\n    this.http.post(this.baseUrl + \"/\" + userId +\"/messages/\"+ messageId + \"/read\", {}).subscribe();\n  }\n  \n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './_services/auth.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { User } from './_models/user';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title(title: any) {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  jwtHelper = new JwtHelperService();\n\n  constructor(private authServices: AuthService) {}\n\n  ngOnInit(): void {\n    const token = localStorage.getItem('token');\n    const user: User = JSON.parse(localStorage.getItem('user'));\n    if(token){\n      this.authServices.decodedToken = this.jwtHelper.decodeToken(token);\n    }\n    if(user) {\n      this.authServices.currentUser = user;\n      this.authServices.changeUserPhoto(user.photoUrl);\n    }\n  }\n  \n}\n","<app-nav></app-nav>\n<router-outlet></router-outlet>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { RouterModule } from '@angular/router';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { PaginationModule } from 'ngx-bootstrap/pagination'\nimport { NgxGalleryModule } from 'ngx-gallery-9';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { from, config, fromEventPattern } from 'rxjs';\nimport { NavComponent } from './nav/nav.component';\nimport { AuthService } from './_services/auth.service';\nimport { AlertifyService} from './_services/alertify.service';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { UserService } from './_services/user.service';\nimport { UserListComponent } from './user/user-list/user-list.component';\nimport { LikesComponent } from './likes/likes.component';\nimport { MessagesComponent } from './messages/messages.component';\n\nimport { appRoutes } from './routes';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { ErrorInterceptorProvider } from './_services/error.interceptor';\nimport { UserCardComponent } from './user/user-card/user-card.component';\nimport { UserDetailComponent } from './user/user-detail/user-detail.component';\nimport { UserDetailResolver } from './_resolvers/user-detail.resolver';\nimport { UserListResolver } from './_resolvers/user-list.resolver';\nimport { UserEditComponent } from './user/user-edit/user-edit.component';\nimport { UserEditResolver } from './_resolvers/user-edit.resolver';\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.guard';\nimport { UserPhotosComponent } from './user/user-photos/user-photos.component';\nimport { TimeAgoPipe } from './_pipes/time-ago-pipe';\nimport { LikesResolver } from './_resolvers/likes.resolver';\nimport { MessagesResolver } from './_resolvers/messages.resolver';\nimport { UserMessagesComponent } from './user/user-messages/user-messages.component';\n\n\n\nexport function tokenGetter() {\n  return localStorage.getItem('token');\n}\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    HomeComponent,\n    RegisterComponent,\n    UserListComponent,\n    LikesComponent,\n    MessagesComponent,\n    UserCardComponent,\n    UserDetailComponent,\n    UserEditComponent,\n    UserPhotosComponent,\n    TimeAgoPipe,\n    UserMessagesComponent,\n\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    JwtModule.forRoot({\n      config: {\n         tokenGetter: tokenGetter,\n         whitelistedDomains: ['localhost:5000'],\n         blacklistedRoutes: ['localhost:5000/api/auth']\n      }\n   }),\n    RouterModule.forRoot(appRoutes),\n    TabsModule.forRoot(),\n    NgxGalleryModule,\n    FileUploadModule,\n    BsDatepickerModule.forRoot(),\n    BrowserAnimationsModule,\n    PaginationModule.forRoot(),\n    ButtonsModule.forRoot()\n\n  ],\n\n\n  providers: [\n    AuthService,\n    AlertifyService,\n    UserService,\n    AuthGuard,\n    ErrorInterceptorProvider,\n    UserDetailResolver,\n    UserListResolver,\n    UserEditResolver,\n    LikesResolver,\n    MessagesResolver,\n    PreventUnsavedChanges\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n\n  registerMode = false;\n  values: any;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.GetValues();\n  }\n\n  registerToggle(){\n    this.registerMode = true;\n  }\n\n  GetValues() {\n    this.http.get('http://localhost:5000/api/value').subscribe(response => {\n      this.values = response;\n    }, error =>{\n      console.log(error);\n     });\n  }\n\n  cancelRegisterMode(registerMode:boolean) {\n    this.registerMode = registerMode;\n  }\n \n}\n","\n\n<div class=\"container mt-5\">\n    <div *ngIf=\"!registerMode\" style=\"text-align: center\">\n        <h1>Znajdz swoją drugą połówkę</h1>\n        <p class=\"lead\">Wejdz aby zobaczyć swoje dopasowania!</p>\n        <div class=\"text-center\">\n           <button class=\"btn btn-primary btn-lg mr-3\" (click)=\"registerToggle()\" >Rejstracja</button>  \n           <button class=\"btn btn-info btn-lg\"> więcej...</button>\n        </div>\n    </div>\n\n    <div *ngIf=\"registerMode\" class=\"container\">\n      <div class=\"row justify-content-center\">\n          <div class=\"col-4\">\n             <app-register (cancelRegister)=\"cancelRegisterMode($event)\" ></app-register>\n          </div>\n         \n      </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { User } from '../_models/user';\nimport { Pagination, PaginationResult } from '../_models/pagination';\nimport { AuthService } from '../_services/auth.service';\nimport { UserService } from '../_services/user.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-likes',\n  templateUrl: './likes.component.html',\n  styleUrls: ['./likes.component.css']\n})\nexport class LikesComponent implements OnInit {\n\n  users: User[];\n  pagination: Pagination;\n  likesParam: string;\n\n  constructor(private authService: AuthService,\n              private userService: UserService,\n              private alertify: AlertifyService,\n              private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.users = data.users.result;\n      this.pagination = data.users.pagination;\n    });\n    this.likesParam = 'UserLikes';\n  }\n\n  loadUsers() {\n    this.userService.GetUsers(this.pagination.currentPage, this.pagination.itemsPerPage, null, this.likesParam)\n    .subscribe((res: PaginationResult<User[]>) => {\n     this.users = res.result;\n     this.pagination =res.pagination;\n   }, error => {\n     console.log(error);\n     this.alertify.error(\"Nie udało się pobrać\")\n   });\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadUsers();\n  }\n\n\n\n}\n","<div class=\"text-center mt-3\">\n    <h2>{{likesParam === 'UserLikes' ? 'Członkowie, którzy mnie lubią' : 'Członkowie, których lubię'}} \n        : {{pagination.totalItems}}</h2>\n  </div>\n  \n  <div class=\"container mt-3\">\n  \n    <div class=\"row\">\n      <div class=\"btn-group\">\n        <button class=\"btn btn-primary\" [(ngModel)]=\"likesParam\" btnRadio=\"UserLikes\" (click)=\"loadUsers()\">\n                 Członkowie, którzy mnie lubią</button>\n        <button class=\"btn btn-primary\" [(ngModel)]=\"likesParam\" btnRadio=\"UserIsLiked\" (click)=\"loadUsers()\">\n                 Członkowie, których lubię</button>\n      </div>\n    </div>\n    <br>\n  \n    <div class=\"row\">\n      <div *ngFor=\"let user of users\" class=\"col-sm-6 col-md-4 col-lg-4 col-xl-2\">\n        <app-user-card [user]=\"user\"></app-user-card>\n      </div>\n    </div>\n  \n  </div>\n  \n  <div class=\"d-flex justify-content-center\">\n    <pagination [boundaryLinks]=\"true\" \n                [totalItems]=\"pagination.totalItems\" \n                [itemsPerPage]=\"pagination.itemsPerPage\" \n                [(ngModel)]=\"pagination.currentPage\"\n                (pageChanged)=\"pageChanged($event)\" \n                previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\">\n    </pagination>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { Message } from 'src/app/_models/message';\nimport { Pagination, PaginationResult } from '../_models/pagination';\nimport { UserService } from '../_services/user.service';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\n\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  messages: Message[];\n  pagination: Pagination;\n  messageContainer = 'Nieprzeczytane';\n  flagaOutbox =false;\n\n\n  constructor(private userService: UserService,\n              private authService: AuthService,\n              private alertify: AlertifyService,\n              private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.messages = data.messages.result;\n      this.pagination = data.messages.pagination;\n    });\n  }\n\n\n  loadMessages() {\n    this.userService.GetMessages(this.authService.decodedToken.nameid, this.pagination.currentPage,\n                                 this.pagination.itemsPerPage, this.messageContainer )\n       .subscribe((res: PaginationResult<Message[]>) => {\n         this.messages = res.result;\n         this.pagination = res.pagination;\n        \n         if(res.result[0].messageContainer === 'Outbox') {\n           this.flagaOutbox = true;\n         }\n         else \n         {\n           this.flagaOutbox =false;\n         }\n    }, error => {\n      this.alertify.error(error);\n    });                             \n  }\n\n  deleteMessage(messageId: number){\n    this.alertify.confirm('Czy napewno chcesz usunąć tę wiadomość?', () => {\n      this.userService.DeleteMessage(this.authService.decodedToken.nameid, messageId).subscribe(() => {\n        this.messages.splice(this.messages.findIndex(m => m.id === messageId), 1);\n        this.alertify.success('Wiadomość została usunięta');\n      }, error => {\n        this.alertify.error('Nie udało się usunąć wiadomości');\n      });\n    });\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadMessages();\n  }\n\n  \n\n}\n","<div class=\"container mt-5\">\n    <div class=\"row\">\n      <div class=\"btn-group\">\n        <button class=\"btn btn-primary\" \n                [(ngModel)]=\"messageContainer\" \n                btnRadio=\"Unread\" \n                (click)=\"loadMessages()\">\n          <i class=\"fa fa-envelope\"></i> Nieprzeczytane\n        </button>\n        <button class=\"btn btn-primary\" \n                [(ngModel)]=\"messageContainer\" \n                btnRadio=\"Inbox\" \n                (click)=\"loadMessages()\">\n          <i class=\"fa fa-envelope-open\"></i> Skrzynka odbiorcza\n        </button>\n        <button class=\"btn btn-primary\" \n                [(ngModel)]=\"messageContainer\" \n                btnRadio=\"Outbox\" \n                (click)=\"loadMessages()\">\n          <i class=\"fa fa-paper-plane\"></i> Skrzynka nadawcza\n        </button>\n      </div>\n    </div>\n  \n    <div class=\"row\" *ngIf=\"messages.length == 0\">\n      <h3>Brak wiadomości</h3>\n    </div>\n  \n    <div class=\"row\" *ngIf=\"messages.length > 0\">\n      <table class=\"table table-hover\" style=\"cursor: pointer\">\n        <tr>\n          <th style=\"width: 40%\">Wiadomość</th>\n          <th style=\"width: 20%\" *ngIf=\"!flagaOutbox\">Od</th>\n          <th style=\"width: 20%\" *ngIf=\"flagaOutbox\">Do</th>\n          <th style=\"width: 20%\" *ngIf=\"!flagaOutbox\">Otrzymane</th>\n          <th style=\"width: 20%\" *ngIf=\"flagaOutbox\">Wysłane</th>\n          <th style=\"width: 20%\"></th>\n        </tr>\n        <tr *ngFor=\"let message of messages\" [routerLink]=\"['/użytkownicy',  messageContainer == 'Outbox' ? message.recipientId : message.senderId]\" [queryParams]=\"{tab:5}\">\n          <td>{{message.content}}</td>\n          <td>\n            <div *ngIf=\"messageContainer != 'Outbox'\">\n                  <img src={{message?.senderPhotoUrl}} class=\"img-circle rounded-circle mr-2\">\n                  <strong>{{message.senderUsername | titlecase}}</strong>\n            </div>\n            <div *ngIf=\"messageContainer == 'Outbox'\">\n                  <img src={{message?.recipientPhotoUrl}} class=\"img-circle rounded-circle mr-2\">\n                  <strong>{{message.recipientUsername | titlecase}}</strong>\n            </div>\n          </td>\n          <td>{{message.dateSent| timeAgo}}</td>\n          <td>\n            <button class=\"btn btn-danger\" (click)=\"deleteMessage(message.id)\" (click)=\"$event.stopPropagation()\">Usuń</button>\n          </td>\n        </tr>\n      </table>\n    </div>\n  </div>\n  \n  <div class=\"d-flex justify-content-center\">\n      <pagination [boundaryLinks]=\"true\"\n                  [totalItems]=\"pagination.totalItems\"\n                  [itemsPerPage]=\"pagination.itemsPerPage\"\n                  [(ngModel)]=\"pagination.currentPage\"\n                  (pageChanged)=\"pageChanged($event)\"\n                previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\">\n    </pagination>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { Router } from '@angular/router';\n\ndeclare let alertify: any;\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  model:any = {};\n  photoUrl: string;\n\n  constructor(public authService: AuthService, private alertifyService: AlertifyService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n     this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\n  }\n\n  login(){\n   this.authService.login(this.model).subscribe(s => {\n      this.alertifyService.success('Zalogowałeś się do aplikacji');\n   }, error => {\n     this.alertifyService.error(error);\n   });\n  }\n\n  loggedIn(){\n   return this.authService.loggedIn();\n  }\n\n  logOut(){\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    this.authService.decodedToken = null\n    this.authService.currentUser = null;\n    this.alertifyService.message('Zostałeś wylogowany');\n    this.router.navigate(['/home']);\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light border-bottom \">\n\n    <div class=\"container\">\n        <a class=\"navbar-brand \" [routerLink]=\"['/home']\"><span class=\"h3\">Portal randkowy</span></a>\n\n        <ul class=\"navbar-nav mr-auto h5\" *ngIf=\"loggedIn()\">\n            <li class=\"nav-item\" routerLinkActive=\"active\">\n                <a class=\"nav-link \" [routerLink]=\"['/użytkownicy']\">Użytkownicy</a>\n            </li>\n            <li class=\"nav-item\" routerLinkActive=\"active\">\n                <a class=\"nav-link \" [routerLink]=\"['/polubienia']\">Polubienia</a>\n            </li>\n            <li class=\"nav-item\" routerLinkActive=\"active\">\n                <a class=\"nav-link \" [routerLink]=\"['/wiadomości']\">Wiadomości</a>\n            </li>\n        </ul>\n\n        <div *ngIf=\"loggedIn()\" class=\"dropdown mr-4\">\n            <span>\n                <img src=\"{{photoUrl || '../../../../../assets/user.png'}}\" class=\"img-fluid rounded-circle\">\n            </span>\n            <button class=\"btn  dropdown-toggle text-dark\" type=\"button\" id=\"dropDownUser\"\n                data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                <span class=\"h4\">  {{ authService.decodedToken?.unique_name | titlecase }}</span>\n            </button>\n            <div class=\"dropdown-menu\" aria-labelledby=\"dropDownUser\">\n                <a class=\"dropdown-item\" [routerLink]=\"['/profil']\"><i class=\"fa fa-user h4\"></i> Edytuj profil</a>\n                <a type=\"button\" class=\"dropdown-item\" (click)=\"logOut()\"><i class=\"fa fa-sign-out h4\"></i> Wyloguj</a>\n            </div>\n        </div>\n\n\n\n        <form *ngIf=\"!loggedIn()\" #loginForm=\"ngForm\" class=\"form-inline\" (ngSubmit)=\"login()\">\n            <input class=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Użytkownik\" [(ngModel)]=\"model.Username\"\n                name=\"UserName\" required #Username=\"ngModel\" autocomplete=\"off\">\n            <input class=\"form-control mr-sm-2\" type=\"password\" placeholder=\"Hasło\" [(ngModel)]=\"model.Password\"\n                name=\"Password\" required #Password=\"ngModel\" autocomplete=\"off\">\n            <button [disabled]=\"!loginForm.valid\" class=\"btn btn-outline-success my-2 my-sm-0\"\n                type=\"submit\">Zaloguj</button>\n        </form>\n    </div>\n</nav>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker/public_api';\nimport { User } from '../_models/user';\nimport { Router } from '@angular/router';\n\n\ndeclare let alertify: any;\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n \n  @Output() cancelRegister: EventEmitter<boolean> = new EventEmitter();\n   user: User;\n   model: any = {};\n   registerForm: FormGroup;\n   DatepickerConfig: Partial<BsDatepickerConfig>;\n\n  constructor(private authService: AuthService, private alertifyService: AlertifyService, private fb: FormBuilder, private router: Router) { }\n\n  ngOnInit(): void {\n    this.DatepickerConfig = {\n      containerClass: 'theme-blue'\n    },\n    this.createRegisterForm();\n  }\n\n  createRegisterForm() {\n    this.registerForm = this.fb.group({\n      username: ['', [Validators.required, Validators.minLength(3)]],\n      password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(10)]],\n      confirmPassword: ['', Validators.required],\n      dateOfBirth: [null, Validators.required],\n      gender: ['Kobieta'],\n      city: ['', Validators.required],\n      country: ['', Validators.required],\n      growth: [null]\n\n    }, {validator: this.passwordMatchValidator});\n  }\n\n\n  passwordMatchValidator(fg: FormGroup) {\n    return fg.get('password').value === fg.get('confirmPassword').value ? null : {missmatch: true};\n  }\n  register(){\n    if (this.registerForm.valid) {\n      this.user = Object.assign({}, this.registerForm.value);\n\n      this.authService.register(this.user).subscribe(s => {\n        this.alertifyService.success(\"Rejestracja udana!\");\n      }, error => {alertify.error(error);\n      }, () => {\n        this.authService.login(this.user).subscribe( () => {\n          this.router.navigate(['/użytkownicy']);\n        })\n      });\n    }\n\n   \n    console.log(this.registerForm.value);\n  }\n\n  cancel() {\n    this.cancelRegister.emit(false);\n    this.alertifyService.error(\"Anulowano\");\n  }\n}\n","<form [formGroup]=\"registerForm\" (ngSubmit)=\"register()\">\n   <h2 class=\"text-center\">Zapisz się</h2>\n\n   <div class=\"form-group\">\n      <label class=\"control-label\" style=\"margin-right:10px\">Jestem: </label>\n      <label class=\"radio-inline ml-4\">\n        <input class=\"mr-2\" type=\"radio\" value=\"Mężczyzna\" formControlName=\"gender\">Mężczyzną\n      </label>\n      <label class=\"radio-inline ml-3\">\n        <input class=\"mr-2\" type=\"radio\" value=\"Kobieta\" formControlName=\"gender\">Kobietą\n      </label>\n    </div>\n\n\n   <div class=\"form-group\">\n      <input type=\"text\" class=\"form-control\" placeholder=\"Nazwa użytkownika\" name=\"Username\" formControlName=\"username\"\n        [ngClass]=\"{'is-invalid': registerForm.get('username').errors && registerForm.get('username').touched}\">\n        <div class=\"invalid-feedback\"\n        *ngIf=\"registerForm.get('username').hasError('required') && registerForm.get('username').touched\">\n        Podaj nazwę użytkownika\n     </div>\n     <div class=\"invalid-feedback\"\n        *ngIf=\"registerForm.get('username').hasError('minlength') && registerForm.get('username').touched\">\n        Minimalnie 3 znaki\n     </div>\n   </div>\n\n   <div class=\"form-group\">\n      <input type=\"text\" class=\"form-control\" placeholder=\"Data urodzenia\" formControlName=\"dateOfBirth\" bsDatepicker [bsConfig]=\"DatepickerConfig\"\n         [ngClass]=\"{'is-invalid': registerForm.get('dateOfBirth').errors && registerForm.get('dateOfBirth').touched}\">\n      <div class=\"invalid-feedback\"\n         *ngIf=\"registerForm.get('dateOfBirth').touched && registerForm.get('dateOfBirth').hasError('required')\">\n         Data urodzenia jest wymagana\n      </div>\n   </div>\n\n   <div class=\"form-group\">\n      <input type=\"text\" class=\"form-control\" placeholder=\"Miasto\" formControlName=\"city\"\n         [ngClass]=\"{'is-invalid': registerForm.get('city').errors && registerForm.get('city').touched}\">\n      <div class=\"invalid-feedback\"\n         *ngIf=\"registerForm.get('city').touched && registerForm.get('city').hasError('required')\">\n         Miasto jest wymagane\n      </div>\n   </div>\n\n   <div class=\"form-group\">\n      <input type=\"text\" class=\"form-control\" placeholder=\"Kraj\" formControlName=\"country\"\n         [ngClass]=\"{'is-invalid': registerForm.get('country').errors && registerForm.get('country').touched}\">\n      <div class=\"invalid-feedback\"\n         *ngIf=\"registerForm.get('country').touched && registerForm.get('country').hasError('required')\">\n         Kraj jest wymagane\n      </div>\n   </div>\n\n   <div class=\"form-group\">\n      <input type=\"number\" class=\"form-control\" placeholder=\"Wzrost\" formControlName=\"growth\">\n   </div>\n\n\n   <div class=\"form-group\">\n      <input type=\"password\" class=\"form-control\" placeholder=\"Hasło\" name=\"Password\" formControlName=\"password\"\n         [ngClass]=\"{'is-invalid': registerForm.get('password').errors && registerForm.get('password').touched}\">\n      <div class=\"invalid-feedback\"\n         *ngIf=\"registerForm.get('password').hasError('required') && registerForm.get('password').touched\">\n         Hasło jest wymagane\n      </div>\n      <div class=\"invalid-feedback\"\n         *ngIf=\"registerForm.get('password').hasError('minlength') && registerForm.get('password').touched\">\n         Hasło nie może mieć mniej niż 4 znaki\n      </div>\n      <div class=\"invalid-feedback\"\n         *ngIf=\"registerForm.get('password').hasError('maxlength') && registerForm.get('password').touched\">\n         Hasło nie może mieć więcej niż 10 znaków\n      </div>\n   </div>\n\n   <div class=\"form-group\">\n      <input type=\"password\" class=\"form-control\" placeholder=\"Potwierdz hasło\" formControlName=\"confirmPassword\"\n         [ngClass]=\"{'is-invalid': registerForm.get('confirmPassword').errors && registerForm.get('confirmPassword').touched ||\n                                   registerForm.get('confirmPassword').touched && registerForm.hasError('missmatch')}\">\n                                   \n       <div class=\"invalid-feedback\"\n         *ngIf=\"registerForm.get('confirmPassword').hasError('required') && registerForm.get('confirmPassword').touched\">\n         Podaj potwierdzenie hasła\n      </div>\n      <div class=\"invalid-feedback\"\n         *ngIf=\"registerForm.hasError('missmatch') && registerForm.get('confirmPassword').touched\">\n         Hasła muszą być podobne\n      </div>\n   \n   </div>\n\n   <div class=\"form-group text-center\">\n      <button class=\"btn btn-success\" type=\"submit\" [disabled]=\"!registerForm.valid\" >Rejestracja</button>\n      <button class=\"btn btn-default\" type=\"button\" (click)=\"cancel()\">Anuluj</button>\n   </div>\n</form>","import { Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { UserListComponent } from './user/user-list/user-list.component';\r\nimport { LikesComponent } from './likes/likes.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { UserDetailComponent } from './user/user-detail/user-detail.component';\r\nimport { UserDetailResolver } from './_resolvers/user-detail.resolver';\r\nimport { UserListResolver } from './_resolvers/user-list.resolver';\r\nimport { UserEditComponent } from './user/user-edit/user-edit.component';\r\nimport { UserEditResolver } from './_resolvers/user-edit.resolver';\r\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.guard';\r\nimport { LikesResolver } from './_resolvers/likes.resolver';\r\nimport { MessagesResolver } from './_resolvers/messages.resolver';\r\n\r\nexport const appRoutes: Routes = [\r\n    { path: '', component: HomeComponent},\r\n    { path: '',\r\n      runGuardsAndResolvers: 'always',\r\n      canActivate: [AuthGuard],\r\n      children: [\r\n        { path: 'użytkownicy', component: UserListComponent, resolve: {users : UserListResolver}},\r\n        { path: 'użytkownicy/:id', component: UserDetailComponent, resolve: {user: UserDetailResolver}},\r\n        { path: 'profil', component: UserEditComponent, resolve: {user: UserEditResolver}, canDeactivate: [PreventUnsavedChanges]},\r\n        { path: 'polubienia', component: LikesComponent,resolve: {users: LikesResolver}},\r\n        \r\n        { path: 'wiadomości', component: MessagesComponent,resolve: {messages: MessagesResolver}},\r\n        \r\n      ]\r\n    },\r\n    { path: '**', redirectTo: '', pathMatch: 'full'},\r\n];\r\n\r\n\r\n","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from 'src/app/_models/user';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\n\n@Component({\n  selector: 'app-user-card',\n  templateUrl: './user-card.component.html',\n  styleUrls: ['./user-card.component.css']\n})\nexport class UserCardComponent implements OnInit {\n\n  @Input() user: User;\n\n  constructor(private authService: AuthService,\n              private userService: UserService, \n              private alertify: AlertifyService) { }\n\n  ngOnInit(): void {\n  }\n\n  sendLike(id: number) {\n    this.userService.SendLike(this.authService.decodedToken.nameid, id)\n          .subscribe(data => {\n            this.alertify.success('Polubiłeś: ' +this.user.userName)\n          }, error => {\n            this.alertify.error(error);\n          })\n  }\n\n}\n","<div class=\"card m-3 shadow-lg \">\n    <div class=\"card-body p-1\">\n        <h5 class=\"card-title text-center\">{{user.userName | titlecase}} {{user.age}}</h5>\n    </div>\n    <div class=\"card-img-wrapper\">\n        <img class=\"card-img-top border\" src=\"{{user.photoUrl || '../../../../../assets/user.png'}}\" alt=\"{{user.userName}}\">\n        <ul class=\"list-inline text-center user-icons animate\">\n            <li class=\"list-inline-item\" (click)=\"sendLike(user.userid)\">\n                <button class=\"btn btn-danger\"><i class=\"fa fa-heart\"></i></button>\n            </li>\n            <li class=\"list-inline-item\">\n                <button class=\"btn btn-success\" [routerLink]=\"['/użytkownicy/', user.userid]\" [queryParams]=\"{tab:5}\"><i class=\"fa fa-envelope \"></i></button>\n            </li>\n            <li class=\"list-inline-item\">\n                <button class=\"btn btn-primary\" [routerLink]=\"['/użytkownicy/', user.userid]\" routerLinkActive=\"router-link-active\" ><i class=\"fa fa-user\"></i></button>\n            </li>\n        </ul>\n    </div>\n\n    <div class=\"card-body m-0  row d-flex justify-content-between\">\n        <p class=\"card-text my-auto\">{{user.city}}</p>\n    </div>\n</div>","import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { User } from 'src/app/_models/user';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgxGalleryOptions, NgxGalleryImage, NgxGalleryAnimation } from 'ngx-gallery-9';\nimport { TabsetComponent } from 'ngx-bootstrap/tabs';\nimport { AuthService } from 'src/app/_services/auth.service';\n\n@Component({\n  selector: 'app-user-detail',\n  templateUrl: './user-detail.component.html',\n  styleUrls: ['./user-detail.component.css']\n})\nexport class UserDetailComponent implements OnInit {\n\n  @ViewChild('userTabs', {static: true}) userTabs: TabsetComponent;\n  user: User;\n  galleryOptions: NgxGalleryOptions[];\n  galleryImages: NgxGalleryImage[];\n  \n  constructor(private userService: UserService, \n              private authService: AuthService,\n              public alertify: AlertifyService, \n              private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.user = data.user;\n    });\n\n    this.route.queryParams.subscribe(params => {\n      const selectTab = params.tab;\n      this.userTabs.tabs[selectTab> 0 ? selectTab : 0].active = true;\n    });\n\n    this.galleryOptions = [\n      {\n        width: '400px',\n        height: '400px',\n        thumbnailsColumns: 4,\n        imagePercent: 100,\n        preview: false,\n        imageAnimation: NgxGalleryAnimation.Slide\n      }\n    ];\n\n    this.galleryImages = this.getImages();\n  }\n\n  getImages() {\n    const imagesUrls = [];\n\n    for(let i = 0; i< this.user.photos.length; i++) {\n      imagesUrls.push({\n        small: this.user.photos[i].url,\n        medium: this.user.photos[i].url,\n        big: this.user.photos[i].url,\n        description: this.user.photos[i].description\n      });\n    }\n    return imagesUrls; \n  }\n\n  selectTab(tabId: number) {\n    this.userTabs.tabs[tabId].active = true;\n  }\n\n  sendLike(id: number) {\n    this.userService.SendLike(this.authService.decodedToken.nameid, id)\n          .subscribe(data => {\n            this.alertify.success('Polubiłeś: ' +this.user.userName)\n          }, error => {\n            this.alertify.error(error);\n          })\n  }\n}\n","<div class=\"container mt-3\">\n    <div class=\"row display-4\">\n        Profil {{user.userName}}\n    </div>\n    <div class=\"row\">\n        <div class=\"col-sm-4\">\n            <div class=\"card\">\n                <div>\n                    <img class=\"card-img\" src=\"{{user.photoUrl || '../../../../../assets/user.png'}}\">\n                </div>\n                <div class=\"card-body\">\n                    <strong>Wiek</strong>\n                    <p>{{user.age}} </p>\n                    <strong>Płeć</strong>\n                    <p>{{user.gender}}</p>\n                    <strong>Miejscowość</strong>\n                    <p>{{user.city}} {{user.country}}</p>\n                    <strong>Ostatnia aktywność:</strong>\n                    <p>{{user.lastActive | timeAgo }}</p>\n                </div>\n            </div>\n        </div>\n\n\n        <div class=\"col-sm-8\">\n            <div class=\"card\">\n                <div class=\"tab-panel\">\n                    <tabset #userTabs>\n                        <tab heading=\"Informacje {{user.userName | titlecase}}\">\n                            <div class=\"card-body row\">\n                                <div class=\"col-sm-6\">\n                                    <table class=\"text-center\">\n                                        <tr>\n                                            <td>\n                                                <h5 class=\"strong\">Wzrost</h5>\n                                                <p>{{user.growth}}cm</p>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <h5>Kolor oczu</h5>\n                                                <p>{{user.colorEye}}</p>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <h5>Znak zodiaku</h5>\n                                                <p>{{user.zodiacSign}}</p>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <h5>Kolor skóry</h5>\n                                                <p>{{user.colorSkin}}</p>\n                                            </td>\n                                        </tr>\n                            \n                                    </table>\n                                </div>\n                                <div class=\"col-sm-6\">\n                                    <table class=\"text-center\">\n                                        <tr>\n                                            <td>\n                                                <h5>Status</h5>\n                                                <p>{{user.martialStatus}}</p>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <h5>Wykształcenie</h5>\n                                                <p>{{user.martialStatus}}</p>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <h5>Zawód</h5>\n                                                <p>{{user.profession}}</p>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <h5>Języki</h5>\n                                                <p>{{user.langueches}}</p>\n                                            </td>\n                                        </tr>\n                                    </table>\n                                </div>\n                            </div>\n                            </tab>\n                        <tab heading=\"O mnie\">\n                            <div class=\"card-body\">\n                            <table>\n                                <tr>\n                                    <td>\n                                        <h5>O mnie</h5>\n                                        <p>{{user.description}}</p>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <h5>Moje motto</h5>\n                                        <p>{{user.motto}}</p>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <h5>Osobowość</h5>\n                                        <p>{{user.personality}}</p>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <h5>Szukam</h5>\n                                        <p>{{user.lookingFor}}</p>\n                                    </td>\n                                </tr>\n\n                            </table>\n                            </div>\n                        </tab>\n                        <tab heading=\"Zainteresowania\">\n                            <div class=\"card-body\">\n                                <table>\n                                    <tr>\n                                        <td>\n                                            <h5>Zainteresowania</h5>\n                                            <p>{{user.interest}}</p>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <h5>Czas wolny</h5>\n                                            <p>{{user.freeTime}}</p>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <h5>Sport</h5>\n                                            <p>{{user.movies}}</p>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <h5>Muzyka</h5>\n                                            <p>{{user.music}}</p>\n                                        </td>\n                                    </tr>\n    \n                                </table>\n                                </div>\n        \n                        </tab>\n                        <tab heading=\"Preferencję\">\n                            <div class=\"card-body\">\n                                <table>\n                                    <tr>\n                                        <td>\n                                            <h5>Lubię</h5>\n                                            <p>{{user.iLike}}</p>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <h5>Nie lubię</h5>\n                                            <p>{{user.iNotLike}}</p>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <h5>Śmieszy mnie</h5>\n                                            <p>{{user.makesMeLaugh}}</p>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <h5>Czuję się dobrze kiedy</h5>\n                                            <p>{{user.itFeelsBestIn}}</p>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <h5>Znajomi opisują mnie jako</h5>\n                                            <p>{{user.friendsWouldDescribeMe}}</p>\n                                        </td>\n                                    </tr>\n                                </table>\n                                </div>\n\n                        </tab>\n                        <tab heading=\"Zdjęcia\" class=\"text-center\">\n                            <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\"></ngx-gallery>\n                        </tab>\n                        <tab heading=\"Wiadomość\" class=\"text-center\">\n                            <app-user-messages [recipientId]=\"user.userid\"></app-user-messages>\n                        </tab>\n                    </tabset>\n                </div>\n                <div class=\"card-footer\">\n                    <div class=\"btn-group d-flex\">\n                        <button class=\"btn btn-outline-success\" (click)=\"sendLike(user.userid)\">Lubię</button>\n                        <button class=\"btn btn-outline-primary\" (click)=\"selectTab(5)\">Wiadomość</button>\n                        <button class=\"btn btn-outline-info\">Zadzwoń</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        </div>\n        </div>","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from 'src/app/_models/user';\nimport { ActivatedRoute } from '@angular/router';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { NgForm } from '@angular/forms';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AuthService } from 'src/app/_services/auth.service';\n\n@Component({\n  selector: 'app-user-edit',\n  templateUrl: './user-edit.component.html',\n  styleUrls: ['./user-edit.component.css']\n})\nexport class UserEditComponent implements OnInit {\n\n  user: User;\n  photoUrl: string;\n  @ViewChild('editForm') editForm: NgForm;\n  @HostListener('window:beforeunload', ['$event'])\n  unloadNotification($event: any) {\n     if(this.editForm.dirty) {\n       $event.returnValue = true;\n     }\n  }\n\n  constructor(private route: ActivatedRoute, \n              private alertify: AlertifyService, \n              private userService: UserService,\n              private authService: AuthService) { }\n\n  ngOnInit(): void { \n    this.route.data.subscribe(data => {\n      this.user= data.user;\n    });\n    this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\n  \n  }\n\n  updateUser() {\n    this.userService.UpdateUser(this.authService.decodedToken.nameid, this.user)\n    .subscribe(read => {\n      this.alertify.success(\"Profil zakutalizowany\");\n      this.editForm.reset(this.user);\n    }, error => {\n       this.alertify.error(error);\n       console.error(error);\n    });\n  }\n\n  updateMainPhoto(photoUrl) {\n    this.user.photoUrl = photoUrl;\n  }\n\n\n}\n","<div class=\"container mt-3\">\n    <div class=\"row m-2\">\n        <div class=\"col-sm-4\">\n            <p class=\"h1\">Twój profil - Edycja</p>\n        </div>\n        <div class=\"col-sm-8\">\n            <div *ngIf=\"editForm.dirty\" class=\"alert alert-info\">\n                <p class=\"h5 m-auto\"><strong>Informacje: </strong> Dokonałeś zmian, aby zapisać wciśnij przycisk \"Zapisz\n                    zmiany\"</p>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-sm-4\">\n            <div class=\"card\">\n                <div>\n                    <img class=\"card-img\" src=\"{{photoUrl || '../../../../../assets/user.png'}}\">\n                </div>\n                <div class=\"card-body\">\n                    <strong>Wiek</strong>\n                    <p>{{user.age}} </p>\n                    <strong>Płeć</strong>\n                    <p>{{user.gender}}</p>\n                    <strong>Miejscowość</strong>\n                    <p>{{user.city}} {{user.country}}</p>\n                    <strong>Ostatnia aktywność:</strong>\n                    <p>{{user.lastActive | timeAgo }}</p>\n                </div>\n            </div>\n        </div>\n\n\n        <div class=\"col-sm-8\">\n            <form #editForm=\"ngForm\" (ngSubmit)=\"updateUser()\">\n                <div class=\"card\">\n                    <div class=\"tab-panel\">\n                        <tabset >\n                            <tab heading=\"Informacje - Edycja\" >\n                                <div class=\"card-body row\">\n                                    <div class=\"col-sm-5 text-center mr-auto\">\n                                \n                                        <h5>Wzrost</h5>\n                                        <textarea class=\"form-control text-center\" name=\"growth\" rows=\"1\" [(ngModel)]=\"user.growth\"></textarea>\n                                \n                                        <h5>Kolor oczu</h5>\n                                        <textarea class=\"form-control text-center\" name=\"colorEye\" rows=\"1\" [(ngModel)]=\"user.colorEye\"></textarea>\n                                \n                                        <h5>Znak zodiaku</h5>\n                                        <textarea class=\"form-control text-center\" name=\"zodiacSign\" rows=\"1\" [(ngModel)]=\"user.zodiacSign\"></textarea>\n                                \n                                        <h5>Kolor skóry</h5>\n                                        <textarea class=\"form-control text-center\" name=\"colorSkin\" rows=\"1\" [(ngModel)]=\"user.colorSkin\"></textarea>\n                                \n                                    </div>\n                                    <div class=\"col-sm-5 text-center ml-auto\">\n                                    \n                                        <h5>Status</h5>\n                                        <textarea class=\"form-control text-center\" name=\"martialStatus\" rows=\"1\" [(ngModel)]=\"user.martialStatus\"></textarea>\n                                    \n                                        <h5>Wykształcenie</h5>\n                                        <textarea class=\"form-control text-center\" name=\"education\" rows=\"1\" [(ngModel)]=\"user.education\"></textarea>\n                                    \n                                        <h5>Zawód</h5>\n                                        <textarea class=\"form-control text-center\" name=\"profession\" rows=\"1\" [(ngModel)]=\"user.profession\"></textarea>\n                                    \n                                        <h5>Języki</h5>\n                                        <textarea class=\"form-control text-center\" name=\"langueches\" rows=\"1\" [(ngModel)]=\"user.langueches\"></textarea>\n                                    \n                                    </div>\n                                </div>\n                            </tab>\n                            <tab heading=\"O mnie\">\n                                <div class=\"card-body\">\n                            \n                                    <h5>O mnie</h5>\n                                    <textarea class=\"form-control text-center\" name=\"description\" rows=\"2\" [(ngModel)]=\"user.description\"></textarea>\n                            \n                                    <h5>Moje motto</h5>\n                                    <textarea class=\"form-control text-center\" name=\"motto\" rows=\"2\" [(ngModel)]=\"user.motto\"></textarea>\n                            \n                                    <h5>Osobowość</h5>\n                                    <textarea class=\"form-control text-center\" name=\"personality\" rows=\"2\"\n                                        [(ngModel)]=\"user.personality\"></textarea>\n                            \n                                    <h5>Szukam</h5>\n                                    <textarea class=\"form-control text-center\" name=\"lookingFor\" rows=\"2\" [(ngModel)]=\"user.lookingFor\"></textarea>\n                            \n                                </div>\n                            </tab>\n                            <tab heading=\"Zainteresowania\">\n                                <div class=\"card-body\">\n                                \n                                    <h5>Zainteresowania</h5>\n                                    <textarea class=\"form-control text-center\" name=\"interest\" rows=\"2\" [(ngModel)]=\"user.interest\"></textarea>\n                                \n                                    <h5>Czas wolny</h5>\n                                    <textarea class=\"form-control text-center\" name=\"freeTime\" rows=\"2\" [(ngModel)]=\"user.freeTime\"></textarea>\n                                \n                                    <h5>Sport</h5>\n                                    <textarea class=\"form-control text-center\" name=\"sport\" rows=\"2\" [(ngModel)]=\"user.sport\"></textarea>\n                                \n                                    <h5>Muzyka</h5>\n                                    <textarea class=\"form-control text-center\" name=\"music\" rows=\"2\" [(ngModel)]=\"user.music\"></textarea>\n                                \n                                </div>\n                            </tab>\n                            <tab heading=\"Preferencję\">\n                                <div class=\"card-body\">\n                            \n                                    <h5>Lubię</h5>\n                                    <textarea class=\"form-control text-center\" name=\"iLike\" rows=\"2\" [(ngModel)]=\"user.iLike\"></textarea>\n                            \n                                    <h5>Nie lubię</h5>\n                                    <textarea class=\"form-control text-center\" name=\"iNotLike\" rows=\"2\" [(ngModel)]=\"user.iNotLike\"></textarea>\n                            \n                                    <h5>Śmieszy mnie</h5>\n                                    <textarea class=\"form-control text-center\" name=\"makesMeLaugh\" rows=\"2\"\n                                        [(ngModel)]=\"user.makesMeLaugh\"></textarea>\n                            \n                                    <h5>Czuję się dobrze kiedy</h5>\n                                    <textarea class=\"form-control text-center\" name=\"itFeelsBestIn\" rows=\"2\"\n                                        [(ngModel)]=\"user.itFeelsBestIn\"></textarea>\n                            \n                                    <h5>Znajomi opisują mnie jako</h5>\n                                    <textarea class=\"form-control text-center\" name=\"friendsWouldDescribeMe\" rows=\"2\"\n                                        [(ngModel)]=\"user.friendsWouldDescribeMe\"></textarea>\n                            \n                                </div>\n                            </tab>\n                            <tab heading=\"Zdjęcia\">\n                               <app-user-photos [photos]=\"user.photos\" (getUserPhotoChange)=\"updateMainPhoto($event)\"></app-user-photos>\n                            </tab>\n                        </tabset>\n                    </div>\n                    <div class=\"card-footer\">\n                        <div class=\"text-center\">\n                            <button [disabled]=\"!editForm.dirty\" class=\"btn btn-success btn-block\">Zapisz zmiany</button>\n                        </div>\n                    </div>    \n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/_services/user.service';\nimport { User } from 'src/app/_models/user';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Pagination, PaginationResult } from 'src/app/_models/pagination';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n\n  users: User[];\n  user: User = JSON.parse(localStorage.getItem('user'));\n  genderList = [{value: 'mężczyzna', display: 'Mężczyzni'},\n                {value: 'kobieta', display: 'Kobiety'}];\n  userParams: any = {};              \n  pagination: Pagination;\n\n\n  constructor(private userService: UserService, \n              public alertify: AlertifyService, \n              public route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n   this.route.data.subscribe(data =>{ \n      this.users = data.users.result;\n      this.pagination = data.users.pagination;\n    });\n    this.userParams.gender = this.user.gender === 'Kobieta' ? 'Mężczyzna' : 'Kobieta';\n    this.userParams.minAge = 18;\n    this.userParams.maxAge = 100;\n    this.userParams.orderBy = 'lastActive';\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadUsers();\n  }\n\n  resetFilters() {\n    this.userParams.gender = this.user.gender === 'Kobieta' ? 'Mężczyzna' : 'Kobieta';\n    this.userParams.minAge = 18;\n    this.userParams.maxAge = 100;\n    this.userParams.orderBy = 'lastActive';\n    this.loadUsers();\n  }\n\n  loadUsers() {\n     this.userService.GetUsers(this.pagination.currentPage, this.pagination.itemsPerPage, this.userParams)\n     .subscribe((res: PaginationResult<User[]>) => {\n      this.users = res.result;\n      this.pagination =res.pagination;\n      \n    }, error => {\n      console.log(error);\n      this.alertify.error(\"Nie udało się pobrać\")\n    });\n   }\n}\n","<div class=\"container mt-3\">\n    <div class=\"col-lg-12 text-center\">\n        <a href=\"https://allegro.pl/listing?string=smartwatch&bmatch=baseline-al-product-cl-eyesa2-engag-dict45-ele-1-3-0513\">\n          <img src=\"../../../assets/baner-reklamowy-allegro.png\" class=\"banner shadow-lg\"> \n        </a>\n    </div>\n</div>\n<div class=\"container my-4\">\n\n    <div class=\"text center\">\n        <h2>Znajdz osobę : {{pagination.totalItems}}</h2>\n    \n        <form class=\"form-inline\"  #form=\"ngForm\" (ngSubmit)=\"loadUsers()\" novalidate>\n\n            <div class=\"form-group\">\n                <label for=\"minAge \" style=\"margin: 15px;\">Wiek od: </label>\n                <input type=\"number\" class=\"form-control\" id=\"minAge\" name=\"minAge\" [(ngModel)]=\"userParams.minAge\">\n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"maxAge\" style=\"margin: 15px;\">Wiek do: </label>\n                <input type=\"number\" class=\"form-control\" id=\"maxAge\" name=\"maxAge\" [(ngModel)]=\"userParams.maxAge\">\n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"gender\" style=\"margin: 15px;\">Płeć: </label>\n                <select class=\"form-control\" id=\"gender\" name=\"gender\" [(ngModel)]=\"userParams.gender\">\n                    <option *ngFor=\"let gender of genderList\" [value]=\"gender.value\">\n                        {{gender.display}}\n                    </option>\n                </select>\n            </div>\n            \n            <button type=\"submit\" class=\"btn btn-primary m-2\">Szukaj</button>\n            <button type=\"button\" class=\"btn btn-info m-2\" (click)=\"resetFilters()\">Zresetuj</button>\n\n        </form>\n    </div>\n\n    <div class=\"row\">\n      \n            <div class=\"col-md-12\">\n                <div class=\"row \">\n                    <div *ngFor=\"let user of users\" class=\"mx-auto\">\n            \n                        <app-user-card [user]='user'></app-user-card>\n                    </div>\n                </div>\n            </div>\n    \n        <pagination [boundaryLinks]=\"true\" \n                    [totalItems]=\"pagination.totalItems\" \n                    [itemsPerPage]=\"pagination.itemsPerPage\"\n                    [(ngModel)]=\"pagination.currentPage\" \n                    (pageChanged)=\"pageChanged($event)\" \n                    previousText=\"&lsaquo;\"\n                    nextText=\"&rsaquo;\" lastText=\"&raquo;\"\n                   >\n        </pagination>\n        \n        <div class=\"ml-auto\">\n            <button type=\"button\"\n             btnRadio=\"lastActive\" \n             [(ngModel)]=\"userParams.orderBy\" \n             (click)=\"loadUsers()\" \n             class=\"btn btn-primary\" name=\"orderBy\" >Ostatnio aktywni</button>\n\n            <button type=\"button\" \n             btnRadio=\"created\"\n             [(ngModel)]=\"userParams.orderBy\"\n             (click)=\"loadUsers()\"\n             class=\"btn btn-primary\" name=\"orderBy\">Najnowsi członkowie</button>\n        </div>\n       \n    </div>\n\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Message } from 'src/app/_models/message';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-user-messages',\n  templateUrl: './user-messages.component.html',\n  styleUrls: ['./user-messages.component.css']\n})\nexport class UserMessagesComponent implements OnInit {\n\n  @Input() recipientId: number;\n  messages: Message[];\n  newMessage: any = {};\n\n\n  constructor(private userService: UserService,\n              private authService: AuthService,\n              private alertify: AlertifyService\n              ) { }\n\n  ngOnInit(): void {\n    this.loadMessages();\n  }\n\n  loadMessages() {\n    const currentUserId =  this.authService.decodedToken.nameid;\n    this.userService.GetMessageThread(this.authService.decodedToken.nameid, this.recipientId)\n    .pipe(\n      tap(messages => {\n        for(let i = 0; i < messages.length; i++) {\n          if(messages[i].isRead === false && messages[i].recipientId === currentUserId )\n             this.userService.MarkAsRead(currentUserId, messages[i].id);\n        }\n      })\n    )\n    .subscribe(messages => {\n       this.messages= messages;\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n  sendMessage() {\n    this.newMessage.recipientId =this.recipientId;\n    this.userService.SendMessage(this.authService.decodedToken.nameid, this.newMessage)\n       .subscribe((message: Message) => {\n         this.messages.unshift(message);\n         this.newMessage.content = '';\n       }, error => {\n         this.alertify.error(error);\n       });\n  }\n\n\n\n\n\n}\n","<div class=\"card\">\n    <div class=\"card-body\">\n        <div *ngIf=\"messages?.length === 0\">\n            Brak wiadomości ...\n        </div>\n        <ul class=\"chat\">\n            <li *ngFor=\"let message of messages\">\n                <!-- ja -->\n                <div *ngIf=\"message.senderId == recipientId\">\n                    <span class=\"chat-img float-left\">\n                        <img src=\"{{message.senderPhotoUrl}}\" alt=\"{{message.senderUsername}}\" class=\"rounded-circle\">\n                        <strong class=\"primary-font\">{{message.senderUsername | titlecase}}</strong>\n                    </span>\n                    <div class=\"chat-body\">\n                        <div class=\"header\">\n                            <small class=\"text-muted float-right\">\n                                <span class=\"fa fa-clock-o\">{{message.dateSend | timeAgo}}</span>\n                            </small>\n                        </div>\n                        <p>{{message.content}}</p>\n                    </div>\n                </div>\n\n\n                <!-- inni-->\n                <div *ngIf=\"message.senderId != recipientId\">\n                    <span class=\"chat-img float-right\">\n                        <strong class=\"primary-font\">{{message.senderUsername | titlecase}}</strong>\n                        <img src=\"{{message.senderPhotoUrl}}\" alt=\"{{message.senderUsername}}\" class=\"rounded-circle\">\n                    </span>\n                    <div class=\"chat-body\">\n                        <div class=\"header\">\n                            <small class=\"text-muted float-left\">\n                                <span class=\"fa fa-clock-o\">{{message.dateSend | timeAgo }}</span>\n                                <span *ngIf=\"!message.isRead\" class=\"text-danger\">(nie przeczytane)</span>\n                                <span *ngIf=\"message.isRead\"\n                                    class=\"text-success\">(przeczytane){{message.dataRead | timeAgo }}</span>\n                            </small>\n                        </div>\n                        <p>{{message.content}}</p>\n                    </div>\n                </div>\n            </li>\n        </ul>\n    </div>\n    <div class=\"card-footer\">\n        <form #messageForm=\"ngForm\" (ngSubmit)=\"messageForm.valid && sendMessage()\">\n            <div class=\"input-group\">\n                <input type=\"text\" \n                       class=\"form-control input-sm\" \n                       placeholder=\"Wyślij prywatną wiadomości\"\n                       [(ngModel)]=\"newMessage.content\"\n                       name=\"content\"\n                       required>\n                <div class=\"input-group-append\">\n                    <button class=\"btn btn-primary\" [disabled]=\"!messageForm.valid\">Wyślij</button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n\n\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Photo } from '../../_models/photo';\nimport { FileUploader } from 'ng2-file-upload';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { UserService } from 'src/app/_services/user.service';\n\n@Component({\n  selector: 'app-user-photos',\n  templateUrl: './user-photos.component.html',\n  styleUrls: ['./user-photos.component.css']\n})\nexport class UserPhotosComponent implements OnInit {\n\n  @Input() photos: Photo[];\n  @Output() getUserPhotoChange = new EventEmitter<string>();\n \n  uploader:FileUploader;\n  hasBaseDropZoneOver = false;\n  baseUrl = environment.apiUrl;\n  currentMain: Photo;\n  \n\n  constructor(private authService: AuthService,\n              private userService: UserService,\n              private alertify: AlertifyService) { }\n\n  ngOnInit(): void {\n    this.initializeUploader();\n\n  }\n\n  public fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n\n  initializeUploader() {\n    this.uploader = new FileUploader({\n      url: this.baseUrl + 'users/' + this.authService.decodedToken.nameid + '/photos',\n      authToken: 'Bearer ' + localStorage.getItem('token'),\n      isHTML5: true,\n      allowedFileType: ['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 10 * 1024 * 1024\n    });\n\n    this.uploader.onAfterAddingFile = (file) => { file.withCredentials = false; };\n\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n      if (response) {\n        const res: Photo = JSON.parse(response);\n        const photo = {\n          id: res.id,\n          url: res.url,\n          dateAdded: res.dateAdded,\n          description: res.description,\n          mainPhoto: res.mainPhoto\n        };\n        this.photos.push(photo);\n        if(photo.mainPhoto){\n          this.authService.changeUserPhoto(photo.url);\n          this.authService.currentUser.photoUrl = photo.url;\n          localStorage.setItem('user', JSON.stringify(this.authService.currentUser));\n         }\n      }\n    };\n\n  }\n\n\n  setMainPhoto(photo: Photo) {\n    this.userService.SetMainPhoto(this.authService.decodedToken.nameid, photo.id).subscribe(() => {\n      console.log('Sukces, zdjęcie ustawione jako główne');\n      if (this.currentMain = this.photos.filter(p => p.mainPhoto === true)[0]) {\n        this.currentMain.mainPhoto = false;\n      }\n      photo.mainPhoto = true;\n      this.authService.changeUserPhoto(photo.url);\n      this.authService.currentUser.photoUrl = photo.url;\n      localStorage.setItem('user', JSON.stringify(this.authService.currentUser));\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n  deletePhoto(id: number) {\n    this.alertify.confirm('Czy jesteś pewien że chcesz usunąć to zdjęcie', () => {\n      this.userService.DeletePhoto(this.authService.decodedToken.nameid, id).subscribe(() => {\n         this.photos.splice(this.photos.findIndex(p => p.id === id), 1);\n         this.alertify.success(\"Zdjęcie zostało usunięte\");\n      }, error => {\n        this.alertify.error(\"Nie udało się usunąć zdjęcia\");\n      })\n    });\n  }\n\n\n\n\n}\n\n\n","<div class=\"row p-2\">\n   <div class=\"col-sm-3\" *ngFor=\"let photo of photos\">\n       <img src=\"{{photo.url}}\" alt=\"{{photo.description}}\"  class=\"img-thumbnail\">\n       <div class=\"text-center mb-3 mt-1\">\n         <button type=\"button\" class=\"btn btn-sm \" \n         (click)=\"setMainPhoto(photo)\"\n         [ngClass]=\"photo.mainPhoto ? 'btn-success active' : 'btn-info' \"\n         [disabled]=\"photo.mainPhoto\"><i class=\"fa fa-user-circle\"></i> Główne</button>\n         <button type=\"button\" class=\"btn btn-sm btn-danger\"\n         [disabled]=\"photo.mainPhoto\"\n         (click)=\"deletePhoto(photo.id)\"><i class=\"fa fa-trash-o\"></i></button>\n       </div>\n   </div>\n</div>\n\n<div class=\"container\">\n    <div class=\"row mt-3\">\n\n        <div class=\"col-md-3\">\n            <h3>Wybierz plik</h3>\n\n            <div ng2FileDrop \n            [ngClass]=\"{'nv-file-over': hasBaseDropZoneOver}\" \n            (fileOver)=\"fileOverBase($event)\"\n            [uploader]=\"uploader\" \n            class=\"card bg-faded p-3 text-center my-drop-zone\">\n            <i class=\"fa fa-upload fa-3x \"></i>\n                Miejsce zrzutu zdjęcia\n            </div>\n            Wiele plików\n            <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple /><br />\n\n            Pojedyńczy plik\n            <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\n        </div>\n\n        <div class=\"col-md-9\" style=\"margin-bottom: 40px\" *ngIf=\"uploader?.queue?.length\">\n\n            <h3>Kolejka przesyłania</h3>\n            <p>Wielkość kolejki: {{ uploader?.queue?.length }}</p>\n\n            <table class=\"table\">\n                <thead>\n                    <tr>\n                        <th width=\"50%\">Nazwa</th>\n                        <th>Rozmiar</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let item of uploader.queue\">\n                        <td><strong>{{ item?.file?.name }}</strong></td>\n                        <td *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\n                    </tr>\n                </tbody>\n            </table>\n\n            <div>\n                <div>\n                    Postęp w kolejce:\n                    <div class=\"progress mb-4\">\n                        <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\n                    </div>\n                </div>\n                <button type=\"button\" class=\"btn btn-success btn-s\" (click)=\"uploader.uploadAll()\"\n                    [disabled]=\"!uploader.getNotUploadedItems().length\">\n                    <span class=\"fa fa-upload \"></span> Wyślij\n                </button>\n                <button type=\"button\" class=\"btn btn-warning btn-s\" (click)=\"uploader.cancelAll()\"\n                    [disabled]=\"!uploader.isUploading\">\n                    <span class=\"fa fa-ban\"></span> Anuluj\n                </button>\n                <button type=\"button\" class=\"btn btn-danger btn-s\" (click)=\"uploader.clearQueue()\"\n                    [disabled]=\"!uploader.queue.length\">\n                    <span class=\"fa fa-trash\"></span> Usuń\n                </button>\n            </div>\n\n        </div>\n\n    </div>\n\n    \n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:5000/api/'\n\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}