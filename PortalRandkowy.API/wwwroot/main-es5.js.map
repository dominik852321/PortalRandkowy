{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_guards/auth.guard.ts","webpack:///src/app/_guards/prevent-unsaved-changes.guard.ts","webpack:///src/app/_models/pagination.ts","webpack:///src/app/_pipes/time-ago-pipe.ts","webpack:///src/app/_resolvers/likes.resolver.ts","webpack:///src/app/_resolvers/messages.resolver.ts","webpack:///src/app/_resolvers/user-detail.resolver.ts","webpack:///src/app/_resolvers/user-edit.resolver.ts","webpack:///src/app/_resolvers/user-list.resolver.ts","webpack:///src/app/_services/alertify.service.ts","webpack:///src/app/_services/auth.service.ts","webpack:///src/app/_services/error.interceptor.ts","webpack:///src/app/_services/user.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/likes/likes.component.ts","webpack:///src/app/likes/likes.component.html","webpack:///src/app/messages/messages.component.ts","webpack:///src/app/messages/messages.component.html","webpack:///src/app/nav/nav.component.ts","webpack:///src/app/nav/nav.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/routes.ts","webpack:///src/app/user/user-card/user-card.component.ts","webpack:///src/app/user/user-card/user-card.component.html","webpack:///src/app/user/user-detail/user-detail.component.ts","webpack:///src/app/user/user-detail/user-detail.component.html","webpack:///src/app/user/user-edit/user-edit.component.ts","webpack:///src/app/user/user-edit/user-edit.component.html","webpack:///src/app/user/user-list/user-list.component.ts","webpack:///src/app/user/user-list/user-list.component.html","webpack:///src/app/user/user-messages/user-messages.component.ts","webpack:///src/app/user/user-messages/user-messages.component.html","webpack:///src/app/user/user-photos/user-photos.component.ts","webpack:///src/app/user/user-photos/user-photos.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AuthGuard","authService","router","alertify","loggedIn","error","navigate","providedIn","PreventUnsavedChanges","component","editForm","dirty","confirm","PaginationResult","TimeAgoPipe","changeDetectorRef","ngZone","value","removeTimer","d","Date","now","seconds","Math","round","abs","getTime","timeToUpdate","Number","isNaN","getSecondsUntilUpdate","timer","runOutsideAngular","window","setTimeout","run","markForCheck","minutes","hours","days","months","years","clearTimeout","min","hr","day","name","pure","LikesResolver","userService","pageNumber","pageSize","likesParam","route","GetUsers","pipe","MessagesResolver","messageContainer","GetMessages","decodedToken","nameid","UserDetailResolver","GetUser","params","UserEditResolver","UserListResolver","AlertifyService","message","success","warning","okCallback","AuthService","http","baseUrl","apiUrl","jwtHelper","photoUrl","currentPhotoUrl","asObservable","next","model","post","response","user","localStorage","setItem","token","JSON","stringify","decodeToken","currentUser","changeUserPhoto","getItem","isTokenExpired","Errorinterceptor","handle","applicationError","headers","get","serverError","errors","key","ErrorInterceptorProvider","provide","useClass","multi","UserService","page","itemsPerPage","userParams","paginationResult","append","minAge","maxAge","gender","orderBy","observe","result","body","pagination","parse","put","idPhoto","recipientId","messageId","userId","subscribe","routes","AppRoutingModule","forRoot","imports","AppComponent","authServices","title","selector","templateUrl","styleUrls","tokenGetter","AppModule","config","whitelistedDomains","blacklistedRoutes","declarations","providers","bootstrap","HomeComponent","registerMode","GetValues","values","console","log","LikesComponent","data","users","currentPage","res","event","loadUsers","pageChanged","$event","stopPropagation","MessagesComponent","flagaOutbox","messages","DeleteMessage","splice","findIndex","m","loadMessages","NavComponent","alertifyService","login","s","removeItem","RegisterComponent","fb","cancelRegister","DatepickerConfig","containerClass","createRegisterForm","registerForm","group","username","required","minLength","password","maxLength","confirmPassword","dateOfBirth","city","country","growth","validator","passwordMatchValidator","fg","missmatch","valid","Object","assign","register","emit","cancel","appRoutes","path","runGuardsAndResolvers","canActivate","children","canDeactivate","redirectTo","pathMatch","UserCardComponent","SendLike","userName","sendLike","UserDetailComponent","queryParams","selectTab","tab","userTabs","tabs","active","galleryOptions","width","height","thumbnailsColumns","imagePercent","preview","imageAnimation","Slide","galleryImages","getImages","imagesUrls","i","photos","length","push","small","url","medium","big","description","tabId","UserEditComponent","returnValue","UpdateUser","read","reset","updateUser","updateMainPhoto","UserListComponent","genderList","display","resetFilters","UserMessagesComponent","newMessage","currentUserId","GetMessageThread","isRead","MarkAsRead","SendMessage","unshift","content","sendMessage","uploader","UserPhotosComponent","getUserPhotoChange","hasBaseDropZoneOver","initializeUploader","authToken","isHTML5","allowedFileType","removeAfterUpload","autoUpload","maxFileSize","onAfterAddingFile","file","withCredentials","onSuccessItem","item","status","photo","dateAdded","mainPhoto","SetMainPhoto","currentMain","filter","p","DeletePhoto","fileOverBase","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  \n  constructor(private authService: AuthService, private router: Router, \n    public alertify: AlertifyService) {}\n  \n  canActivate(): boolean {\n\n    if(this.authService.loggedIn()){\n      return true;\n    }\n\n    this.alertify.error('Nie masz uprawnień')\n    this.router.navigate(['/home']);\n    return false;\n  }\n\n  \n}\n","import { UserEditComponent } from '../user/user-edit/user-edit.component';\r\nimport { CanDeactivate } from '@angular/router';\r\n\r\nexport class PreventUnsavedChanges implements CanDeactivate<UserEditComponent> {\r\n    canDeactivate(component: UserEditComponent) {\r\n        if(component.editForm.dirty) {\r\n            return confirm('Nie zapisałeś zmian');\r\n        }\r\n        return true;\r\n    }\r\n}","export interface Pagination {\n   currentPage: number;\n   itemsPerPage: number;\n   totalItems: number;\n   totalPages: number;\n\n}\n\nexport class PaginationResult<T> {\n  result: T;\n  pagination: Pagination;\n}\n","import {Pipe, PipeTransform, NgZone, ChangeDetectorRef, OnDestroy} from '@angular/core';\r\n@Pipe({\r\n    name: 'timeAgo',\r\n    pure: false\r\n})\r\nexport class TimeAgoPipe implements PipeTransform, OnDestroy {\r\n   \r\n    private timer: number;\r\n\r\n    constructor(private changeDetectorRef: ChangeDetectorRef, private ngZone: NgZone) {}\r\n\r\n    transform(value: string) {\r\n        this.removeTimer();\r\n        const d = new Date(value);\r\n        const now = new Date();\r\n        const seconds = Math.round(Math.abs((now.getTime() - d.getTime()) / 1000));\r\n        const timeToUpdate = (Number.isNaN(seconds)) ? 1000 : this.getSecondsUntilUpdate(seconds) * 1000;\r\n\r\n        this.timer = this.ngZone.runOutsideAngular(() => {\r\n            if (typeof window !== 'undefined') {\r\n                return window.setTimeout(() => {\r\n                    this.ngZone.run(() => this.changeDetectorRef.markForCheck());\r\n                }, timeToUpdate);\r\n            }\r\n            return null;\r\n        });\r\n\r\n        const minutes = Math.round(Math.abs(seconds / 60));\r\n        const hours = Math.round(Math.abs(minutes / 60));\r\n        const days = Math.round(Math.abs(hours / 24));\r\n        const months = Math.round(Math.abs(days / 30.416));\r\n        const years = Math.round(Math.abs(days / 365));\r\n\r\n        if (Number.isNaN(seconds)){\r\n            return '';\r\n        } else if (seconds <= 45) {\r\n            return 'kilka sekund temu';\r\n        } else if (seconds <= 90) {\r\n            return 'minutę temu';\r\n        } else if (minutes <= 45) {\r\n            return minutes + ' minut(y) temu';\r\n        } else if (minutes <= 90) {\r\n            return 'godzinę temu';\r\n        } else if (hours <= 22) {\r\n            return hours + ' godzin(y) temu';\r\n        } else if (hours <= 36) {\r\n            return 'dzień temu';\r\n        } else if (days <= 25) {\r\n            return days + ' dni temu';\r\n        } else if (days <= 45) {\r\n            return 'miesiąc temu';\r\n        } else if (days <= 345) {\r\n            return months + ' miesiące(y) temu';\r\n        } else if (days <= 545) {\r\n            return 'rok temu';\r\n        } else {                        // (days > 545)\r\n            return years + ' lata temu';\r\n        }\r\n    }\r\n    ngOnDestroy(): void {\r\n        this.removeTimer();\r\n    }\r\n    private removeTimer() {\r\n        if (this.timer) {\r\n            window.clearTimeout(this.timer);\r\n            this.timer = null;\r\n        }\r\n    }\r\n    private getSecondsUntilUpdate(seconds:number) {\r\n        const min = 60;\r\n        const hr = min * 60;\r\n        const day = hr * 24;\r\n        if (seconds < min) {            // less than 1 min, update every 2 secs\r\n            return 2;\r\n        } else if (seconds < hr) {      // less than an hour, update every 30 secs\r\n            return 30;\r\n        } else if (seconds < day) {     // less then a day, update every 5 mins\r\n            return 300;\r\n        } else {                        // update every hour\r\n            return 3600;\r\n        }\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { from, Observable, of } from 'rxjs';\r\nimport { User } from '../_models/user';\r\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n\r\n@Injectable()\r\nexport class LikesResolver implements Resolve<User[]> {\r\n    \r\n    pageNumber = 1;\r\n    pageSize = 24;\r\n    likesParam = 'UserLikes';\r\n\r\n    constructor(private userService: UserService, \r\n                 private router: Router, \r\n                 private alertify: AlertifyService) {}\r\n                \r\n    resolve(route: ActivatedRouteSnapshot): Observable<User[]>  {\r\n        return this.userService.GetUsers(this.pageNumber, this.pageSize, null,this.likesParam).pipe(\r\n            catchError(error =>{\r\n              this.alertify.error('Problem z pobraniem danych');\r\n              this.router.navigate(['']);\r\n              return of(null);\r\n            })\r\n        );\r\n    }      \r\n\r\n    }\r\n    ","import { Injectable } from '@angular/core';\r\nimport { from, Observable, of } from 'rxjs';\r\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Message } from 'src/app/_models/message';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n\r\n@Injectable()\r\nexport class MessagesResolver implements Resolve<Message[]> {\r\n    \r\n    pageNumber = 1;\r\n    pageSize = 12;\r\n    messageContainer = 'Nieprzeczytane'; \r\n\r\n    constructor(private userService: UserService, \r\n                 private router: Router, \r\n                 private alertify: AlertifyService,\r\n                 private authService: AuthService) {}\r\n                \r\n    resolve(route: ActivatedRouteSnapshot): Observable<Message[]>  {\r\n        return this.userService.GetMessages(this.authService.decodedToken.nameid, this.pageNumber, \r\n                                            this.pageSize, this.messageContainer).pipe(\r\n            catchError(error =>{\r\n              this.alertify.error('Problem z wyszukiwaniem wiadomości');\r\n              this.router.navigate(['/home']);\r\n              return of(null);\r\n            })\r\n        );\r\n    }    \r\n    \r\n    \r\n\r\n    }\r\n    \r\n","import { Injectable } from '@angular/core';\r\n    import { from, Observable, of } from 'rxjs';\r\nimport { User } from '../_models/user';\r\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { Route } from '@angular/compiler/src/core';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n\r\n@Injectable()\r\nexport class UserDetailResolver implements Resolve<User> {\r\n    \r\n    constructor(private userService: UserService, \r\n                 private router: Router, \r\n                 private alertify: AlertifyService) {}\r\n                 \r\n    resolve(route: ActivatedRouteSnapshot): Observable<User>  {\r\n        return this.userService.GetUser(route.params.id).pipe(\r\n            catchError(error =>{\r\n              this.alertify.error('Problem z pobraniem danych');\r\n              this.router.navigate(['/użytkownicy']);\r\n              return of(null);\r\n            })\r\n        );\r\n    }\r\n\r\n     \r\n                 \r\n\r\n    }\r\n    \r\n","import { Injectable } from '@angular/core';\r\n    import { from, Observable, of } from 'rxjs';\r\nimport { User } from '../_models/user';\r\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { Route } from '@angular/compiler/src/core';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n\r\n@Injectable()\r\nexport class UserEditResolver implements Resolve<User> {\r\n    \r\n    constructor(private userService: UserService, \r\n                 private router: Router, \r\n                 private alertify: AlertifyService,\r\n                 private authService: AuthService) {}\r\n               \r\n           \r\n    resolve(route: ActivatedRouteSnapshot): Observable<User>  {\r\n        return this.userService.GetUser(this.authService.decodedToken.nameid).pipe(\r\n            catchError(error =>{\r\n              this.alertify.error('Problem z pobraniem danych');\r\n              this.router.navigate(['']);\r\n              return of(null);\r\n            })\r\n        );\r\n    }\r\n\r\n     \r\n                 \r\n\r\n    }\r\n    \r\n","import { Injectable } from '@angular/core';\r\n    import { from, Observable, of } from 'rxjs';\r\nimport { User } from '../_models/user';\r\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n\r\n@Injectable()\r\nexport class UserListResolver implements Resolve<User[]> {\r\n    \r\n    pageNumber = 1;\r\n    pageSize = 16;\r\n\r\n    constructor(private userService: UserService, \r\n                 private router: Router, \r\n                 private alertify: AlertifyService) {}\r\n                \r\n    resolve(route: ActivatedRouteSnapshot): Observable<User[]>  {\r\n        return this.userService.GetUsers(this.pageNumber, this.pageSize).pipe(\r\n            catchError(error =>{\r\n              this.alertify.error('Problem z pobraniem danych');\r\n              this.router.navigate(['']);\r\n              return of(null);\r\n            })\r\n        );\r\n    }      \r\n\r\n    }\r\n    \r\n","import { Injectable } from '@angular/core';\nimport { ok } from 'assert';\n\ndeclare let alertify: any;\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertifyService {\n\n  constructor() { }\n\n  success(message: string) {\n    alertify.success(message)\n  }\n\n  error(message: string) {\n    alertify.error(message)\n  }\n\n  warning(message: string) {\n    alertify.warning(message)\n  }\n\n  message(message: string) {\n    alertify.message(message);\n  }\n\n  confirm(message: string, okCallback: () =>any) {\n    alertify.confirm(message, (e) => {\n      if(e) {\n        okCallback();\n      }\n      else {}\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { JwtHelperService} from '@auth0/angular-jwt';\nimport { logging } from 'protractor';\nimport { map } from 'rxjs/operators';\nimport { from } from 'rxjs';\nimport { decode } from 'punycode';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/user';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  baseUrl = environment.apiUrl + 'auth';\n  jwtHelper = new JwtHelperService();\n  decodedToken: any;\n  currentUser: User;\n  photoUrl = new BehaviorSubject<string>('../../assets/user.png');\n  currentPhotoUrl = this.photoUrl.asObservable();\n\n\n  constructor(private http: HttpClient) { }\n\n  changeUserPhoto(photoUrl: string) {\n    this.photoUrl.next(photoUrl);\n  }\n\n  login(model: any) {\n    return this.http.post(this.baseUrl + '/login', model).pipe(map((response: any) => {\n        const user = response;\n        if (user) {\n          localStorage.setItem('token', user.token);\n          localStorage.setItem('user', JSON.stringify(user.user));\n          this.decodedToken = this.jwtHelper.decodeToken(user.token);\n          this.currentUser = user.user;\n          this.changeUserPhoto(this.currentUser.photoUrl);\n        }\n      }));\n  }\n\n  register(user: User) {\n    return this.http.post(this.baseUrl+ '/register', user); \n  }\n\n  loggedIn() {\n    const token = localStorage.getItem('token');\n\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpInterceptor, HttpHandler, HttpRequest, HttpEvent, HttpErrorResponse, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AlertifyService } from './alertify.service';\r\n\r\n@Injectable()\r\nexport class Errorinterceptor implements HttpInterceptor{\r\n    \r\n    constructor(public alertify: AlertifyService) {}\r\n    \r\n    intercept(req: HttpRequest<any>, next: HttpHandler ): Observable<HttpEvent<any>> {\r\n     return next.handle(req).pipe(\r\n         catchError(error => {\r\n             if(error instanceof HttpErrorResponse) \r\n             {\r\n               const applicationError = error.headers.get('Application-Error');\r\n\r\n               if(applicationError)\r\n               {\r\n                   this.alertify.error(applicationError);\r\n                   return throwError(applicationError);\r\n               }\r\n\r\n               const serverError = error.error;\r\n               let errors = '';\r\n\r\n               if(serverError && typeof serverError == \"object\")\r\n               {\r\n                   for(const key in serverError)\r\n                   {\r\n                       if(serverError[key]) \r\n                       {\r\n                           errors += serverError[key]+ ', \\n';\r\n                       }\r\n                   }\r\n               }\r\n               return throwError(errors || serverError || 'Server Error');\r\n             }\r\n         })\r\n     );\r\n    }\r\n\r\n}\r\n\r\nexport const ErrorInterceptorProvider = {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: Errorinterceptor,\r\n    multi: true\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models/user';\nimport { PaginationResult } from '../_models/pagination';\nimport { map } from 'rxjs/operators';\nimport { Message } from 'src/app/_models/message';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  baseUrl = environment.apiUrl + 'users';\n\n\n  constructor(private http: HttpClient) { }\n\n  GetUsers(page?, itemsPerPage?, userParams?, likesParam?): Observable<PaginationResult<User[]>>{\n\n    const paginationResult: PaginationResult<User[]> = new PaginationResult<User[]>();\n    let params = new HttpParams();\n\n    if(page != null && itemsPerPage !=null) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    }\n\n    if (userParams != null ) {\n      params = params.append('minAge', userParams.minAge);\n      params = params.append('maxAge', userParams.maxAge);\n      params = params.append('gender', userParams.gender);\n      params = params.append('orderBy', userParams.orderBy);\n    }\n\n    if (likesParam === 'UserLikes') {\n      params = params.append('UserLikes', 'true');\n    }\n    if (likesParam === 'UserIsLiked') {\n      params = params.append('UserIsLiked', 'true');\n    }\n\n\n    return this.http.get<User[]>(this.baseUrl, {observe: 'response', params})\n    .pipe(\n       map(response => {\n         paginationResult.result = response.body;\n        if(response.headers.get('Pagination') != null) {\n          paginationResult.pagination = JSON.parse(response.headers.get('Pagination'))\n        }\n\n        return paginationResult;\n       })\n    )\n  }\n\n  GetUser(id: number): Observable<User> {\n    return this.http.get<User>(this.baseUrl +'/'+ id);\n  }\n\n  UpdateUser(id: number, user: User) {\n    return this.http.put(this.baseUrl +'/'+ id, user);\n  }\n  SetMainPhoto(id : number, idPhoto: number) {\n    return this.http.post(this.baseUrl +'/'+ id +'/photos/'+ idPhoto + '/SetMain', {});\n  }\n\n  DeletePhoto(id : number, idPhoto: number) {\n    return this.http.delete(this.baseUrl + '/' + id + '/photos/' + idPhoto );\n  }\n\n  SendLike(id: number, recipientId: number) {\n    return this.http.post(this.baseUrl + '/'  + id + '/like/' + recipientId, {});\n  }\n\n  GetMessages(id: number, page?, itemsPerPage?, messageContainer?) {\n    const paginationResult: PaginationResult<Message[]> = new PaginationResult<Message[]>();\n\n    let params = new HttpParams();\n\n    params = params.append('MessageContainer', messageContainer);\n\n    if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    }\n\n    return this.http.get<Message[]>(this.baseUrl +\"/\"+ id + \"/messages\", { observe: 'response', params })\n      .pipe(\n        map(response => {\n          paginationResult.result = response.body;\n\n          if (response.headers.get('Pagination') != null) {\n            paginationResult.pagination = JSON.parse(response.headers.get('Pagination'))\n          }\n\n          return paginationResult;\n        })\n      )\n\n  }\n\n  GetMessageThread(id: number, recipientId: number) {\n    return this.http.get<Message[]>(this.baseUrl + \"/\" + id + \"/messages/thread/\" + recipientId);\n  }\n\n  SendMessage(id: number, message: Message) {\n    return this.http.post(this.baseUrl + \"/\" + id + \"/messages\", message);\n  }\n\n  DeleteMessage(id: number, messageId: number) {\n    return this.http.post(this.baseUrl +\"/\"+ id +\"/messages/\"+ messageId, {});\n  }\n\n  MarkAsRead(userId: number, messageId: number) {\n    this.http.post(this.baseUrl + \"/\" + userId +\"/messages/\"+ messageId + \"/read\", {}).subscribe();\n  }\n  \n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './_services/auth.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { User } from './_models/user';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title(title: any) {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  jwtHelper = new JwtHelperService();\n\n  constructor(private authServices: AuthService) {}\n\n  ngOnInit(): void {\n    const token = localStorage.getItem('token');\n    const user: User = JSON.parse(localStorage.getItem('user'));\n    if(token){\n      this.authServices.decodedToken = this.jwtHelper.decodeToken(token);\n    }\n    if(user) {\n      this.authServices.currentUser = user;\n      this.authServices.changeUserPhoto(user.photoUrl);\n    }\n  }\n  \n}\n","<app-nav></app-nav>\n<router-outlet></router-outlet>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { RouterModule } from '@angular/router';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { PaginationModule } from 'ngx-bootstrap/pagination'\nimport { NgxGalleryModule } from 'ngx-gallery-9';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { from, config, fromEventPattern } from 'rxjs';\nimport { NavComponent } from './nav/nav.component';\nimport { AuthService } from './_services/auth.service';\nimport { AlertifyService} from './_services/alertify.service';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { UserService } from './_services/user.service';\nimport { UserListComponent } from './user/user-list/user-list.component';\nimport { LikesComponent } from './likes/likes.component';\nimport { MessagesComponent } from './messages/messages.component';\n\nimport { appRoutes } from './routes';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { ErrorInterceptorProvider } from './_services/error.interceptor';\nimport { UserCardComponent } from './user/user-card/user-card.component';\nimport { UserDetailComponent } from './user/user-detail/user-detail.component';\nimport { UserDetailResolver } from './_resolvers/user-detail.resolver';\nimport { UserListResolver } from './_resolvers/user-list.resolver';\nimport { UserEditComponent } from './user/user-edit/user-edit.component';\nimport { UserEditResolver } from './_resolvers/user-edit.resolver';\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.guard';\nimport { UserPhotosComponent } from './user/user-photos/user-photos.component';\nimport { TimeAgoPipe } from './_pipes/time-ago-pipe';\nimport { LikesResolver } from './_resolvers/likes.resolver';\nimport { MessagesResolver } from './_resolvers/messages.resolver';\nimport { UserMessagesComponent } from './user/user-messages/user-messages.component';\n\n\n\nexport function tokenGetter() {\n  return localStorage.getItem('token');\n}\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    HomeComponent,\n    RegisterComponent,\n    UserListComponent,\n    LikesComponent,\n    MessagesComponent,\n    UserCardComponent,\n    UserDetailComponent,\n    UserEditComponent,\n    UserPhotosComponent,\n    TimeAgoPipe,\n    UserMessagesComponent,\n\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    JwtModule.forRoot({\n      config: {\n         tokenGetter: tokenGetter,\n         whitelistedDomains: ['localhost:5000'],\n         blacklistedRoutes: ['localhost:5000/api/auth']\n      }\n   }),\n    RouterModule.forRoot(appRoutes),\n    TabsModule.forRoot(),\n    NgxGalleryModule,\n    FileUploadModule,\n    BsDatepickerModule.forRoot(),\n    BrowserAnimationsModule,\n    PaginationModule.forRoot(),\n    ButtonsModule.forRoot()\n\n  ],\n\n\n  providers: [\n    AuthService,\n    AlertifyService,\n    UserService,\n    AuthGuard,\n    ErrorInterceptorProvider,\n    UserDetailResolver,\n    UserListResolver,\n    UserEditResolver,\n    LikesResolver,\n    MessagesResolver,\n    PreventUnsavedChanges\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n\n  registerMode = false;\n  values: any;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.GetValues();\n  }\n\n  registerToggle(){\n    this.registerMode = true;\n  }\n\n  GetValues() {\n    this.http.get('http://localhost:5000/api/value').subscribe(response => {\n      this.values = response;\n    }, error =>{\n      console.log(error);\n     });\n  }\n\n  cancelRegisterMode(registerMode:boolean) {\n    this.registerMode = registerMode;\n  }\n \n}\n","\n\n<div class=\"container mt-5\">\n    <div *ngIf=\"!registerMode\" style=\"text-align: center\">\n        <h1>Znajdz swoją drugą połówkę</h1>\n        <p class=\"lead\">Wejdz aby zobaczyć swoje dopasowania!</p>\n        <div class=\"text-center\">\n           <button class=\"btn btn-primary btn-lg mr-3\" (click)=\"registerToggle()\" >Rejstracja</button>  \n           <button class=\"btn btn-info btn-lg\"> więcej...</button>\n        </div>\n    </div>\n\n    <div *ngIf=\"registerMode\" class=\"container\">\n      <div class=\"row justify-content-center\">\n          <div class=\"col-4\">\n             <app-register (cancelRegister)=\"cancelRegisterMode($event)\" ></app-register>\n          </div>\n         \n      </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { User } from '../_models/user';\nimport { Pagination, PaginationResult } from '../_models/pagination';\nimport { AuthService } from '../_services/auth.service';\nimport { UserService } from '../_services/user.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-likes',\n  templateUrl: './likes.component.html',\n  styleUrls: ['./likes.component.css']\n})\nexport class LikesComponent implements OnInit {\n\n  users: User[];\n  pagination: Pagination;\n  likesParam: string;\n\n  constructor(private authService: AuthService,\n              private userService: UserService,\n              private alertify: AlertifyService,\n              private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.users = data.users.result;\n      this.pagination = data.users.pagination;\n    });\n    this.likesParam = 'UserLikes';\n  }\n\n  loadUsers() {\n    this.userService.GetUsers(this.pagination.currentPage, this.pagination.itemsPerPage, null, this.likesParam)\n    .subscribe((res: PaginationResult<User[]>) => {\n     this.users = res.result;\n     this.pagination =res.pagination;\n   }, error => {\n     console.log(error);\n     this.alertify.error(\"Nie udało się pobrać\")\n   });\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadUsers();\n  }\n\n\n\n}\n","<div class=\"text-center mt-3\">\n    <h2>{{likesParam === 'UserLikes' ? 'Członkowie, którzy mnie lubią' : 'Członkowie, których lubię'}} \n        : {{pagination.totalItems}}</h2>\n  </div>\n  \n  <div class=\"container mt-3\">\n  \n    <div class=\"row\">\n      <div class=\"btn-group\">\n        <button class=\"btn btn-primary\" [(ngModel)]=\"likesParam\" btnRadio=\"UserLikes\" (click)=\"loadUsers()\">\n                 Członkowie, którzy mnie lubią</button>\n        <button class=\"btn btn-primary\" [(ngModel)]=\"likesParam\" btnRadio=\"UserIsLiked\" (click)=\"loadUsers()\">\n                 Członkowie, których lubię</button>\n      </div>\n    </div>\n    <br>\n  \n    <div class=\"row\">\n      <div *ngFor=\"let user of users\" class=\"col-sm-6 col-md-4 col-lg-4 col-xl-2\">\n        <app-user-card [user]=\"user\"></app-user-card>\n      </div>\n    </div>\n  \n  </div>\n  \n  <div class=\"d-flex justify-content-center\">\n    <pagination [boundaryLinks]=\"true\" \n                [totalItems]=\"pagination.totalItems\" \n                [itemsPerPage]=\"pagination.itemsPerPage\" \n                [(ngModel)]=\"pagination.currentPage\"\n                (pageChanged)=\"pageChanged($event)\" \n                previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\">\n    </pagination>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { Message } from 'src/app/_models/message';\nimport { Pagination, PaginationResult } from '../_models/pagination';\nimport { UserService } from '../_services/user.service';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\n\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  messages: Message[];\n  pagination: Pagination;\n  messageContainer = 'Nieprzeczytane';\n  flagaOutbox =false;\n\n\n  constructor(private userService: UserService,\n              private authService: AuthService,\n              private alertify: AlertifyService,\n              private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.messages = data.messages.result;\n      this.pagination = data.messages.pagination;\n    });\n  }\n\n\n  loadMessages() {\n    this.userService.GetMessages(this.authService.decodedToken.nameid, this.pagination.currentPage,\n                                 this.pagination.itemsPerPage, this.messageContainer )\n       .subscribe((res: PaginationResult<Message[]>) => {\n         this.messages = res.result;\n         this.pagination = res.pagination;\n        \n         if(res.result[0].messageContainer === 'Outbox') {\n           this.flagaOutbox = true;\n         }\n         else \n         {\n           this.flagaOutbox =false;\n         }\n    }, error => {\n      this.alertify.error(error);\n    });                             \n  }\n\n  deleteMessage(messageId: number){\n    this.alertify.confirm('Czy napewno chcesz usunąć tę wiadomość?', () => {\n      this.userService.DeleteMessage(this.authService.decodedToken.nameid, messageId).subscribe(() => {\n        this.messages.splice(this.messages.findIndex(m => m.id === messageId), 1);\n        this.alertify.success('Wiadomość została usunięta');\n      }, error => {\n        this.alertify.error('Nie udało się usunąć wiadomości');\n      });\n    });\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadMessages();\n  }\n\n  \n\n}\n","<div class=\"container mt-5\">\n    <div class=\"row\">\n      <div class=\"btn-group\">\n        <button class=\"btn btn-primary\" \n                [(ngModel)]=\"messageContainer\" \n                btnRadio=\"Unread\" \n                (click)=\"loadMessages()\">\n          <i class=\"fa fa-envelope\"></i> Nieprzeczytane\n        </button>\n        <button class=\"btn btn-primary\" \n                [(ngModel)]=\"messageContainer\" \n                btnRadio=\"Inbox\" \n                (click)=\"loadMessages()\">\n          <i class=\"fa fa-envelope-open\"></i> Skrzynka odbiorcza\n        </button>\n        <button class=\"btn btn-primary\" \n                [(ngModel)]=\"messageContainer\" \n                btnRadio=\"Outbox\" \n                (click)=\"loadMessages()\">\n          <i class=\"fa fa-paper-plane\"></i> Skrzynka nadawcza\n        </button>\n      </div>\n    </div>\n  \n    <div class=\"row\" *ngIf=\"messages.length == 0\">\n      <h3>Brak wiadomości</h3>\n    </div>\n  \n    <div class=\"row\" *ngIf=\"messages.length > 0\">\n      <table class=\"table table-hover\" style=\"cursor: pointer\">\n        <tr>\n          <th style=\"width: 40%\">Wiadomość</th>\n          <th style=\"width: 20%\" *ngIf=\"!flagaOutbox\">Od</th>\n          <th style=\"width: 20%\" *ngIf=\"flagaOutbox\">Do</th>\n          <th style=\"width: 20%\" *ngIf=\"!flagaOutbox\">Otrzymane</th>\n          <th style=\"width: 20%\" *ngIf=\"flagaOutbox\">Wysłane</th>\n          <th style=\"width: 20%\"></th>\n        </tr>\n        <tr *ngFor=\"let message of messages\" [routerLink]=\"['/użytkownicy',  messageContainer == 'Outbox' ? message.recipientId : message.senderId]\" [queryParams]=\"{tab:5}\">\n          <td>{{message.content}}</td>\n          <td>\n            <div *ngIf=\"messageContainer != 'Outbox'\">\n                  <img src={{message?.senderPhotoUrl}} class=\"img-circle rounded-circle mr-2\">\n                  <strong>{{message.senderUsername | titlecase}}</strong>\n            </div>\n            <div *ngIf=\"messageContainer == 'Outbox'\">\n                  <img src={{message?.recipientPhotoUrl}} class=\"img-circle rounded-circle mr-2\">\n                  <strong>{{message.recipientUsername | titlecase}}</strong>\n            </div>\n          </td>\n          <td>{{message.dateSent| timeAgo}}</td>\n          <td>\n            <button class=\"btn btn-danger\" (click)=\"deleteMessage(message.id)\" (click)=\"$event.stopPropagation()\">Usuń</button>\n          </td>\n        </tr>\n      </table>\n    </div>\n  </div>\n  \n  <div class=\"d-flex justify-content-center\">\n      <pagination [boundaryLinks]=\"true\"\n                  [totalItems]=\"pagination.totalItems\"\n                  [itemsPerPage]=\"pagination.itemsPerPage\"\n                  [(ngModel)]=\"pagination.currentPage\"\n                  (pageChanged)=\"pageChanged($event)\"\n                previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\">\n    </pagination>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { Router } from '@angular/router';\n\ndeclare let alertify: any;\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  model:any = {};\n  photoUrl: string;\n\n  constructor(public authService: AuthService, private alertifyService: AlertifyService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n     this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\n  }\n\n  login(){\n   this.authService.login(this.model).subscribe(s => {\n      this.alertifyService.success('Zalogowałeś się do aplikacji');\n   }, error => {\n     this.alertifyService.error(error);\n   });\n  }\n\n  loggedIn(){\n   return this.authService.loggedIn();\n  }\n\n  logOut(){\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    this.authService.decodedToken = null\n    this.authService.currentUser = null;\n    this.alertifyService.message('Zostałeś wylogowany');\n    this.router.navigate(['/home']);\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light border-bottom \">\n\n    <div class=\"container\">\n        <a class=\"navbar-brand \" [routerLink]=\"['/home']\"><span class=\"h3\">Portal randkowy</span></a>\n\n        <ul class=\"navbar-nav mr-auto h5\" *ngIf=\"loggedIn()\">\n            <li class=\"nav-item\" routerLinkActive=\"active\">\n                <a class=\"nav-link \" [routerLink]=\"['/użytkownicy']\">Użytkownicy</a>\n            </li>\n            <li class=\"nav-item\" routerLinkActive=\"active\">\n                <a class=\"nav-link \" [routerLink]=\"['/polubienia']\">Polubienia</a>\n            </li>\n            <li class=\"nav-item\" routerLinkActive=\"active\">\n                <a class=\"nav-link \" [routerLink]=\"['/wiadomości']\">Wiadomości</a>\n            </li>\n        </ul>\n\n        <div *ngIf=\"loggedIn()\" class=\"dropdown mr-4\">\n            <span>\n                <img src=\"{{photoUrl || '../../../../../assets/user.png'}}\" class=\"img-fluid rounded-circle\">\n            </span>\n            <button class=\"btn  dropdown-toggle text-dark\" type=\"button\" id=\"dropDownUser\"\n                data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                <span class=\"h4\">  {{ authService.decodedToken?.unique_name | titlecase }}</span>\n            </button>\n            <div class=\"dropdown-menu\" aria-labelledby=\"dropDownUser\">\n                <a class=\"dropdown-item\" [routerLink]=\"['/profil']\"><i class=\"fa fa-user h4\"></i> Edytuj profil</a>\n                <a type=\"button\" class=\"dropdown-item\" (click)=\"logOut()\"><i class=\"fa fa-sign-out h4\"></i> Wyloguj</a>\n            </div>\n        </div>\n\n\n\n        <form *ngIf=\"!loggedIn()\" #loginForm=\"ngForm\" class=\"form-inline\" (ngSubmit)=\"login()\">\n            <input class=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Użytkownik\" [(ngModel)]=\"model.Username\"\n                name=\"UserName\" required #Username=\"ngModel\" autocomplete=\"off\">\n            <input class=\"form-control mr-sm-2\" type=\"password\" placeholder=\"Hasło\" [(ngModel)]=\"model.Password\"\n                name=\"Password\" required #Password=\"ngModel\" autocomplete=\"off\">\n            <button [disabled]=\"!loginForm.valid\" class=\"btn btn-outline-success my-2 my-sm-0\"\n                type=\"submit\">Zaloguj</button>\n        </form>\n    </div>\n</nav>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker/public_api';\nimport { User } from '../_models/user';\nimport { Router } from '@angular/router';\n\n\ndeclare let alertify: any;\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n \n  @Output() cancelRegister: EventEmitter<boolean> = new EventEmitter();\n   user: User;\n   model: any = {};\n   registerForm: FormGroup;\n   DatepickerConfig: Partial<BsDatepickerConfig>;\n\n  constructor(private authService: AuthService, private alertifyService: AlertifyService, private fb: FormBuilder, private router: Router) { }\n\n  ngOnInit(): void {\n    this.DatepickerConfig = {\n      containerClass: 'theme-blue'\n    },\n    this.createRegisterForm();\n  }\n\n  createRegisterForm() {\n    this.registerForm = this.fb.group({\n      username: ['', [Validators.required, Validators.minLength(3)]],\n      password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(10)]],\n      confirmPassword: ['', Validators.required],\n      dateOfBirth: [null, Validators.required],\n      gender: ['Kobieta'],\n      city: ['', Validators.required],\n      country: ['', Validators.required],\n      growth: [null]\n\n    }, {validator: this.passwordMatchValidator});\n  }\n\n\n  passwordMatchValidator(fg: FormGroup) {\n    return fg.get('password').value === fg.get('confirmPassword').value ? null : {missmatch: true};\n  }\n  register(){\n    if (this.registerForm.valid) {\n      this.user = Object.assign({}, this.registerForm.value);\n\n      this.authService.register(this.user).subscribe(s => {\n        this.alertifyService.success(\"Rejestracja udana!\");\n      }, error => {alertify.error(error);\n      }, () => {\n        this.authService.login(this.user).subscribe( () => {\n          this.router.navigate(['/użytkownicy']);\n        })\n      });\n    }\n\n   \n    console.log(this.registerForm.value);\n  }\n\n  cancel() {\n    this.cancelRegister.emit(false);\n    this.alertifyService.error(\"Anulowano\");\n  }\n}\n","<form [formGroup]=\"registerForm\" (ngSubmit)=\"register()\">\n   <h2 class=\"text-center\">Zapisz się</h2>\n\n   <div class=\"form-group\">\n      <label class=\"control-label\" style=\"margin-right:10px\">Jestem: </label>\n      <label class=\"radio-inline ml-4\">\n        <input class=\"mr-2\" type=\"radio\" value=\"Mężczyzna\" formControlName=\"gender\">Mężczyzną\n      </label>\n      <label class=\"radio-inline ml-3\">\n        <input class=\"mr-2\" type=\"radio\" value=\"Kobieta\" formControlName=\"gender\">Kobietą\n      </label>\n    </div>\n\n\n   <div class=\"form-group\">\n      <input type=\"text\" class=\"form-control\" placeholder=\"Nazwa użytkownika\" name=\"Username\" formControlName=\"username\"\n        [ngClass]=\"{'is-invalid': registerForm.get('username').errors && registerForm.get('username').touched}\">\n        <div class=\"invalid-feedback\"\n        *ngIf=\"registerForm.get('username').hasError('required') && registerForm.get('username').touched\">\n        Podaj nazwę użytkownika\n     </div>\n     <div class=\"invalid-feedback\"\n        *ngIf=\"registerForm.get('username').hasError('minlength') && registerForm.get('username').touched\">\n        Minimalnie 3 znaki\n     </div>\n   </div>\n\n   <div class=\"form-group\">\n      <input type=\"text\" class=\"form-control\" placeholder=\"Data urodzenia\" formControlName=\"dateOfBirth\" bsDatepicker [bsConfig]=\"DatepickerConfig\"\n         [ngClass]=\"{'is-invalid': registerForm.get('dateOfBirth').errors && registerForm.get('dateOfBirth').touched}\">\n      <div class=\"invalid-feedback\"\n         *ngIf=\"registerForm.get('dateOfBirth').touched && registerForm.get('dateOfBirth').hasError('required')\">\n         Data urodzenia jest wymagana\n      </div>\n   </div>\n\n   <div class=\"form-group\">\n      <input type=\"text\" class=\"form-control\" placeholder=\"Miasto\" formControlName=\"city\"\n         [ngClass]=\"{'is-invalid': registerForm.get('city').errors && registerForm.get('city').touched}\">\n      <div class=\"invalid-feedback\"\n         *ngIf=\"registerForm.get('city').touched && registerForm.get('city').hasError('required')\">\n         Miasto jest wymagane\n      </div>\n   </div>\n\n   <div class=\"form-group\">\n      <input type=\"text\" class=\"form-control\" placeholder=\"Kraj\" formControlName=\"country\"\n         [ngClass]=\"{'is-invalid': registerForm.get('country').errors && registerForm.get('country').touched}\">\n      <div class=\"invalid-feedback\"\n         *ngIf=\"registerForm.get('country').touched && registerForm.get('country').hasError('required')\">\n         Kraj jest wymagane\n      </div>\n   </div>\n\n   <div class=\"form-group\">\n      <input type=\"number\" class=\"form-control\" placeholder=\"Wzrost\" formControlName=\"growth\">\n   </div>\n\n\n   <div class=\"form-group\">\n      <input type=\"password\" class=\"form-control\" placeholder=\"Hasło\" name=\"Password\" formControlName=\"password\"\n         [ngClass]=\"{'is-invalid': registerForm.get('password').errors && registerForm.get('password').touched}\">\n      <div class=\"invalid-feedback\"\n         *ngIf=\"registerForm.get('password').hasError('required') && registerForm.get('password').touched\">\n         Hasło jest wymagane\n      </div>\n      <div class=\"invalid-feedback\"\n         *ngIf=\"registerForm.get('password').hasError('minlength') && registerForm.get('password').touched\">\n         Hasło nie może mieć mniej niż 4 znaki\n      </div>\n      <div class=\"invalid-feedback\"\n         *ngIf=\"registerForm.get('password').hasError('maxlength') && registerForm.get('password').touched\">\n         Hasło nie może mieć więcej niż 10 znaków\n      </div>\n   </div>\n\n   <div class=\"form-group\">\n      <input type=\"password\" class=\"form-control\" placeholder=\"Potwierdz hasło\" formControlName=\"confirmPassword\"\n         [ngClass]=\"{'is-invalid': registerForm.get('confirmPassword').errors && registerForm.get('confirmPassword').touched ||\n                                   registerForm.get('confirmPassword').touched && registerForm.hasError('missmatch')}\">\n                                   \n       <div class=\"invalid-feedback\"\n         *ngIf=\"registerForm.get('confirmPassword').hasError('required') && registerForm.get('confirmPassword').touched\">\n         Podaj potwierdzenie hasła\n      </div>\n      <div class=\"invalid-feedback\"\n         *ngIf=\"registerForm.hasError('missmatch') && registerForm.get('confirmPassword').touched\">\n         Hasła muszą być podobne\n      </div>\n   \n   </div>\n\n   <div class=\"form-group text-center\">\n      <button class=\"btn btn-success\" type=\"submit\" [disabled]=\"!registerForm.valid\" >Rejestracja</button>\n      <button class=\"btn btn-default\" type=\"button\" (click)=\"cancel()\">Anuluj</button>\n   </div>\n</form>","import { Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { UserListComponent } from './user/user-list/user-list.component';\r\nimport { LikesComponent } from './likes/likes.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { UserDetailComponent } from './user/user-detail/user-detail.component';\r\nimport { UserDetailResolver } from './_resolvers/user-detail.resolver';\r\nimport { UserListResolver } from './_resolvers/user-list.resolver';\r\nimport { UserEditComponent } from './user/user-edit/user-edit.component';\r\nimport { UserEditResolver } from './_resolvers/user-edit.resolver';\r\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.guard';\r\nimport { LikesResolver } from './_resolvers/likes.resolver';\r\nimport { MessagesResolver } from './_resolvers/messages.resolver';\r\n\r\nexport const appRoutes: Routes = [\r\n    { path: '', component: HomeComponent},\r\n    { path: '',\r\n      runGuardsAndResolvers: 'always',\r\n      canActivate: [AuthGuard],\r\n      children: [\r\n        { path: 'użytkownicy', component: UserListComponent, resolve: {users : UserListResolver}},\r\n        { path: 'użytkownicy/:id', component: UserDetailComponent, resolve: {user: UserDetailResolver}},\r\n        { path: 'profil', component: UserEditComponent, resolve: {user: UserEditResolver}, canDeactivate: [PreventUnsavedChanges]},\r\n        { path: 'polubienia', component: LikesComponent,resolve: {users: LikesResolver}},\r\n        \r\n        { path: 'wiadomości', component: MessagesComponent,resolve: {messages: MessagesResolver}},\r\n        \r\n      ]\r\n    },\r\n    { path: '**', redirectTo: '', pathMatch: 'full'},\r\n];\r\n\r\n\r\n","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from 'src/app/_models/user';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\n\n@Component({\n  selector: 'app-user-card',\n  templateUrl: './user-card.component.html',\n  styleUrls: ['./user-card.component.css']\n})\nexport class UserCardComponent implements OnInit {\n\n  @Input() user: User;\n\n  constructor(private authService: AuthService,\n              private userService: UserService, \n              private alertify: AlertifyService) { }\n\n  ngOnInit(): void {\n  }\n\n  sendLike(id: number) {\n    this.userService.SendLike(this.authService.decodedToken.nameid, id)\n          .subscribe(data => {\n            this.alertify.success('Polubiłeś: ' +this.user.userName)\n          }, error => {\n            this.alertify.error(error);\n          })\n  }\n\n}\n","<div class=\"card m-3 shadow-lg \">\n    <div class=\"card-body p-1\">\n        <h5 class=\"card-title text-center\">{{user.userName | titlecase}} {{user.age}}</h5>\n    </div>\n    <div class=\"card-img-wrapper\">\n        <img class=\"card-img-top border\" src=\"{{user.photoUrl || '../../../../../assets/user.png'}}\" alt=\"{{user.userName}}\">\n        <ul class=\"list-inline text-center user-icons animate\">\n            <li class=\"list-inline-item\" (click)=\"sendLike(user.userid)\">\n                <button class=\"btn btn-danger\"><i class=\"fa fa-heart\"></i></button>\n            </li>\n            <li class=\"list-inline-item\">\n                <button class=\"btn btn-success\" [routerLink]=\"['/użytkownicy/', user.userid]\" [queryParams]=\"{tab:5}\"><i class=\"fa fa-envelope \"></i></button>\n            </li>\n            <li class=\"list-inline-item\">\n                <button class=\"btn btn-primary\" [routerLink]=\"['/użytkownicy/', user.userid]\" routerLinkActive=\"router-link-active\" ><i class=\"fa fa-user\"></i></button>\n            </li>\n        </ul>\n    </div>\n\n    <div class=\"card-body m-0  row d-flex justify-content-between\">\n        <p class=\"card-text my-auto\">{{user.city}}</p>\n    </div>\n</div>","import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { User } from 'src/app/_models/user';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgxGalleryOptions, NgxGalleryImage, NgxGalleryAnimation } from 'ngx-gallery-9';\nimport { TabsetComponent } from 'ngx-bootstrap/tabs';\nimport { AuthService } from 'src/app/_services/auth.service';\n\n@Component({\n  selector: 'app-user-detail',\n  templateUrl: './user-detail.component.html',\n  styleUrls: ['./user-detail.component.css']\n})\nexport class UserDetailComponent implements OnInit {\n\n  @ViewChild('userTabs', {static: true}) userTabs: TabsetComponent;\n  user: User;\n  galleryOptions: NgxGalleryOptions[];\n  galleryImages: NgxGalleryImage[];\n  \n  constructor(private userService: UserService, \n              private authService: AuthService,\n              public alertify: AlertifyService, \n              private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.user = data.user;\n    });\n\n    this.route.queryParams.subscribe(params => {\n      const selectTab = params.tab;\n      this.userTabs.tabs[selectTab> 0 ? selectTab : 0].active = true;\n    });\n\n    this.galleryOptions = [\n      {\n        width: '400px',\n        height: '400px',\n        thumbnailsColumns: 4,\n        imagePercent: 100,\n        preview: false,\n        imageAnimation: NgxGalleryAnimation.Slide\n      }\n    ];\n\n    this.galleryImages = this.getImages();\n  }\n\n  getImages() {\n    const imagesUrls = [];\n\n    for(let i = 0; i< this.user.photos.length; i++) {\n      imagesUrls.push({\n        small: this.user.photos[i].url,\n        medium: this.user.photos[i].url,\n        big: this.user.photos[i].url,\n        description: this.user.photos[i].description\n      });\n    }\n    return imagesUrls; \n  }\n\n  selectTab(tabId: number) {\n    this.userTabs.tabs[tabId].active = true;\n  }\n\n  sendLike(id: number) {\n    this.userService.SendLike(this.authService.decodedToken.nameid, id)\n          .subscribe(data => {\n            this.alertify.success('Polubiłeś: ' +this.user.userName)\n          }, error => {\n            this.alertify.error(error);\n          })\n  }\n}\n","<div class=\"container mt-3\">\n    <div class=\"row display-4\">\n        Profil {{user.userName}}\n    </div>\n    <div class=\"row\">\n        <div class=\"col-sm-4\">\n            <div class=\"card\">\n                <div>\n                    <img class=\"card-img\" src=\"{{user.photoUrl || '../../../../../assets/user.png'}}\">\n                </div>\n                <div class=\"card-body\">\n                    <strong>Wiek</strong>\n                    <p>{{user.age}} </p>\n                    <strong>Płeć</strong>\n                    <p>{{user.gender}}</p>\n                    <strong>Miejscowość</strong>\n                    <p>{{user.city}} {{user.country}}</p>\n                    <strong>Ostatnia aktywność:</strong>\n                    <p>{{user.lastActive | timeAgo }}</p>\n                </div>\n            </div>\n        </div>\n\n\n        <div class=\"col-sm-8\">\n            <div class=\"card\">\n                <div class=\"tab-panel\">\n                    <tabset #userTabs>\n                        <tab heading=\"Informacje {{user.userName | titlecase}}\">\n                            <div class=\"card-body row\">\n                                <div class=\"col-sm-6\">\n                                    <table class=\"text-center\">\n                                        <tr>\n                                            <td>\n                                                <h5 class=\"strong\">Wzrost</h5>\n                                                <p>{{user.growth}}cm</p>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <h5>Kolor oczu</h5>\n                                                <p>{{user.colorEye}}</p>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <h5>Znak zodiaku</h5>\n                                                <p>{{user.zodiacSign}}</p>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <h5>Kolor skóry</h5>\n                                                <p>{{user.colorSkin}}</p>\n                                            </td>\n                                        </tr>\n                            \n                                    </table>\n                                </div>\n                                <div class=\"col-sm-6\">\n                                    <table class=\"text-center\">\n                                        <tr>\n                                            <td>\n                                                <h5>Status</h5>\n                                                <p>{{user.martialStatus}}</p>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <h5>Wykształcenie</h5>\n                                                <p>{{user.martialStatus}}</p>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <h5>Zawód</h5>\n                                                <p>{{user.profession}}</p>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <h5>Języki</h5>\n                                                <p>{{user.langueches}}</p>\n                                            </td>\n                                        </tr>\n                                    </table>\n                                </div>\n                            </div>\n                            </tab>\n                        <tab heading=\"O mnie\">\n                            <div class=\"card-body\">\n                            <table>\n                                <tr>\n                                    <td>\n                                        <h5>O mnie</h5>\n                                        <p>{{user.description}}</p>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <h5>Moje motto</h5>\n                                        <p>{{user.motto}}</p>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <h5>Osobowość</h5>\n                                        <p>{{user.personality}}</p>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <h5>Szukam</h5>\n                                        <p>{{user.lookingFor}}</p>\n                                    </td>\n                                </tr>\n\n                            </table>\n                            </div>\n                        </tab>\n                        <tab heading=\"Zainteresowania\">\n                            <div class=\"card-body\">\n                                <table>\n                                    <tr>\n                                        <td>\n                                            <h5>Zainteresowania</h5>\n                                            <p>{{user.interest}}</p>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <h5>Czas wolny</h5>\n                                            <p>{{user.freeTime}}</p>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <h5>Sport</h5>\n                                            <p>{{user.movies}}</p>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <h5>Muzyka</h5>\n                                            <p>{{user.music}}</p>\n                                        </td>\n                                    </tr>\n    \n                                </table>\n                                </div>\n        \n                        </tab>\n                        <tab heading=\"Preferencję\">\n                            <div class=\"card-body\">\n                                <table>\n                                    <tr>\n                                        <td>\n                                            <h5>Lubię</h5>\n                                            <p>{{user.iLike}}</p>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <h5>Nie lubię</h5>\n                                            <p>{{user.iNotLike}}</p>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <h5>Śmieszy mnie</h5>\n                                            <p>{{user.makesMeLaugh}}</p>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <h5>Czuję się dobrze kiedy</h5>\n                                            <p>{{user.itFeelsBestIn}}</p>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <h5>Znajomi opisują mnie jako</h5>\n                                            <p>{{user.friendsWouldDescribeMe}}</p>\n                                        </td>\n                                    </tr>\n                                </table>\n                                </div>\n\n                        </tab>\n                        <tab heading=\"Zdjęcia\" class=\"text-center\">\n                            <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\"></ngx-gallery>\n                        </tab>\n                        <tab heading=\"Wiadomość\" class=\"text-center\">\n                            <app-user-messages [recipientId]=\"user.userid\"></app-user-messages>\n                        </tab>\n                    </tabset>\n                </div>\n                <div class=\"card-footer\">\n                    <div class=\"btn-group d-flex\">\n                        <button class=\"btn btn-outline-success\" (click)=\"sendLike(user.userid)\">Lubię</button>\n                        <button class=\"btn btn-outline-primary\" (click)=\"selectTab(5)\">Wiadomość</button>\n                        <button class=\"btn btn-outline-info\">Zadzwoń</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        </div>\n        </div>","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from 'src/app/_models/user';\nimport { ActivatedRoute } from '@angular/router';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { NgForm } from '@angular/forms';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AuthService } from 'src/app/_services/auth.service';\n\n@Component({\n  selector: 'app-user-edit',\n  templateUrl: './user-edit.component.html',\n  styleUrls: ['./user-edit.component.css']\n})\nexport class UserEditComponent implements OnInit {\n\n  user: User;\n  photoUrl: string;\n  @ViewChild('editForm') editForm: NgForm;\n  @HostListener('window:beforeunload', ['$event'])\n  unloadNotification($event: any) {\n     if(this.editForm.dirty) {\n       $event.returnValue = true;\n     }\n  }\n\n  constructor(private route: ActivatedRoute, \n              private alertify: AlertifyService, \n              private userService: UserService,\n              private authService: AuthService) { }\n\n  ngOnInit(): void { \n    this.route.data.subscribe(data => {\n      this.user= data.user;\n    });\n    this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\n  \n  }\n\n  updateUser() {\n    this.userService.UpdateUser(this.authService.decodedToken.nameid, this.user)\n    .subscribe(read => {\n      this.alertify.success(\"Profil zakutalizowany\");\n      this.editForm.reset(this.user);\n    }, error => {\n       this.alertify.error(error);\n       console.error(error);\n    });\n  }\n\n  updateMainPhoto(photoUrl) {\n    this.user.photoUrl = photoUrl;\n  }\n\n\n}\n","<div class=\"container mt-3\">\n    <div class=\"row m-2\">\n        <div class=\"col-sm-4\">\n            <p class=\"h1\">Twój profil - Edycja</p>\n        </div>\n        <div class=\"col-sm-8\">\n            <div *ngIf=\"editForm.dirty\" class=\"alert alert-info\">\n                <p class=\"h5 m-auto\"><strong>Informacje: </strong> Dokonałeś zmian, aby zapisać wciśnij przycisk \"Zapisz\n                    zmiany\"</p>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-sm-4\">\n            <div class=\"card\">\n                <div>\n                    <img class=\"card-img\" src=\"{{photoUrl || '../../../../../assets/user.png'}}\">\n                </div>\n                <div class=\"card-body\">\n                    <strong>Wiek</strong>\n                    <p>{{user.age}} </p>\n                    <strong>Płeć</strong>\n                    <p>{{user.gender}}</p>\n                    <strong>Miejscowość</strong>\n                    <p>{{user.city}} {{user.country}}</p>\n                    <strong>Ostatnia aktywność:</strong>\n                    <p>{{user.lastActive | timeAgo }}</p>\n                </div>\n            </div>\n        </div>\n\n\n        <div class=\"col-sm-8\">\n            <form #editForm=\"ngForm\" (ngSubmit)=\"updateUser()\">\n                <div class=\"card\">\n                    <div class=\"tab-panel\">\n                        <tabset >\n                            <tab heading=\"Informacje - Edycja\" >\n                                <div class=\"card-body row\">\n                                    <div class=\"col-sm-5 text-center mr-auto\">\n                                \n                                        <h5>Wzrost</h5>\n                                        <textarea class=\"form-control text-center\" name=\"growth\" rows=\"1\" [(ngModel)]=\"user.growth\"></textarea>\n                                \n                                        <h5>Kolor oczu</h5>\n                                        <textarea class=\"form-control text-center\" name=\"colorEye\" rows=\"1\" [(ngModel)]=\"user.colorEye\"></textarea>\n                                \n                                        <h5>Znak zodiaku</h5>\n                                        <textarea class=\"form-control text-center\" name=\"zodiacSign\" rows=\"1\" [(ngModel)]=\"user.zodiacSign\"></textarea>\n                                \n                                        <h5>Kolor skóry</h5>\n                                        <textarea class=\"form-control text-center\" name=\"colorSkin\" rows=\"1\" [(ngModel)]=\"user.colorSkin\"></textarea>\n                                \n                                    </div>\n                                    <div class=\"col-sm-5 text-center ml-auto\">\n                                    \n                                        <h5>Status</h5>\n                                        <textarea class=\"form-control text-center\" name=\"martialStatus\" rows=\"1\" [(ngModel)]=\"user.martialStatus\"></textarea>\n                                    \n                                        <h5>Wykształcenie</h5>\n                                        <textarea class=\"form-control text-center\" name=\"education\" rows=\"1\" [(ngModel)]=\"user.education\"></textarea>\n                                    \n                                        <h5>Zawód</h5>\n                                        <textarea class=\"form-control text-center\" name=\"profession\" rows=\"1\" [(ngModel)]=\"user.profession\"></textarea>\n                                    \n                                        <h5>Języki</h5>\n                                        <textarea class=\"form-control text-center\" name=\"langueches\" rows=\"1\" [(ngModel)]=\"user.langueches\"></textarea>\n                                    \n                                    </div>\n                                </div>\n                            </tab>\n                            <tab heading=\"O mnie\">\n                                <div class=\"card-body\">\n                            \n                                    <h5>O mnie</h5>\n                                    <textarea class=\"form-control text-center\" name=\"description\" rows=\"2\" [(ngModel)]=\"user.description\"></textarea>\n                            \n                                    <h5>Moje motto</h5>\n                                    <textarea class=\"form-control text-center\" name=\"motto\" rows=\"2\" [(ngModel)]=\"user.motto\"></textarea>\n                            \n                                    <h5>Osobowość</h5>\n                                    <textarea class=\"form-control text-center\" name=\"personality\" rows=\"2\"\n                                        [(ngModel)]=\"user.personality\"></textarea>\n                            \n                                    <h5>Szukam</h5>\n                                    <textarea class=\"form-control text-center\" name=\"lookingFor\" rows=\"2\" [(ngModel)]=\"user.lookingFor\"></textarea>\n                            \n                                </div>\n                            </tab>\n                            <tab heading=\"Zainteresowania\">\n                                <div class=\"card-body\">\n                                \n                                    <h5>Zainteresowania</h5>\n                                    <textarea class=\"form-control text-center\" name=\"interest\" rows=\"2\" [(ngModel)]=\"user.interest\"></textarea>\n                                \n                                    <h5>Czas wolny</h5>\n                                    <textarea class=\"form-control text-center\" name=\"freeTime\" rows=\"2\" [(ngModel)]=\"user.freeTime\"></textarea>\n                                \n                                    <h5>Sport</h5>\n                                    <textarea class=\"form-control text-center\" name=\"sport\" rows=\"2\" [(ngModel)]=\"user.sport\"></textarea>\n                                \n                                    <h5>Muzyka</h5>\n                                    <textarea class=\"form-control text-center\" name=\"music\" rows=\"2\" [(ngModel)]=\"user.music\"></textarea>\n                                \n                                </div>\n                            </tab>\n                            <tab heading=\"Preferencję\">\n                                <div class=\"card-body\">\n                            \n                                    <h5>Lubię</h5>\n                                    <textarea class=\"form-control text-center\" name=\"iLike\" rows=\"2\" [(ngModel)]=\"user.iLike\"></textarea>\n                            \n                                    <h5>Nie lubię</h5>\n                                    <textarea class=\"form-control text-center\" name=\"iNotLike\" rows=\"2\" [(ngModel)]=\"user.iNotLike\"></textarea>\n                            \n                                    <h5>Śmieszy mnie</h5>\n                                    <textarea class=\"form-control text-center\" name=\"makesMeLaugh\" rows=\"2\"\n                                        [(ngModel)]=\"user.makesMeLaugh\"></textarea>\n                            \n                                    <h5>Czuję się dobrze kiedy</h5>\n                                    <textarea class=\"form-control text-center\" name=\"itFeelsBestIn\" rows=\"2\"\n                                        [(ngModel)]=\"user.itFeelsBestIn\"></textarea>\n                            \n                                    <h5>Znajomi opisują mnie jako</h5>\n                                    <textarea class=\"form-control text-center\" name=\"friendsWouldDescribeMe\" rows=\"2\"\n                                        [(ngModel)]=\"user.friendsWouldDescribeMe\"></textarea>\n                            \n                                </div>\n                            </tab>\n                            <tab heading=\"Zdjęcia\">\n                               <app-user-photos [photos]=\"user.photos\" (getUserPhotoChange)=\"updateMainPhoto($event)\"></app-user-photos>\n                            </tab>\n                        </tabset>\n                    </div>\n                    <div class=\"card-footer\">\n                        <div class=\"text-center\">\n                            <button [disabled]=\"!editForm.dirty\" class=\"btn btn-success btn-block\">Zapisz zmiany</button>\n                        </div>\n                    </div>    \n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/_services/user.service';\nimport { User } from 'src/app/_models/user';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Pagination, PaginationResult } from 'src/app/_models/pagination';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n\n  users: User[];\n  user: User = JSON.parse(localStorage.getItem('user'));\n  genderList = [{value: 'mężczyzna', display: 'Mężczyzni'},\n                {value: 'kobieta', display: 'Kobiety'}];\n  userParams: any = {};              \n  pagination: Pagination;\n\n\n  constructor(private userService: UserService, \n              public alertify: AlertifyService, \n              public route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n   this.route.data.subscribe(data =>{ \n      this.users = data.users.result;\n      this.pagination = data.users.pagination;\n    });\n    this.userParams.gender = this.user.gender === 'Kobieta' ? 'Mężczyzna' : 'Kobieta';\n    this.userParams.minAge = 18;\n    this.userParams.maxAge = 100;\n    this.userParams.orderBy = 'lastActive';\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadUsers();\n  }\n\n  resetFilters() {\n    this.userParams.gender = this.user.gender === 'Kobieta' ? 'Mężczyzna' : 'Kobieta';\n    this.userParams.minAge = 18;\n    this.userParams.maxAge = 100;\n    this.userParams.orderBy = 'lastActive';\n    this.loadUsers();\n  }\n\n  loadUsers() {\n     this.userService.GetUsers(this.pagination.currentPage, this.pagination.itemsPerPage, this.userParams)\n     .subscribe((res: PaginationResult<User[]>) => {\n      this.users = res.result;\n      this.pagination =res.pagination;\n      \n    }, error => {\n      console.log(error);\n      this.alertify.error(\"Nie udało się pobrać\")\n    });\n   }\n}\n","<div class=\"container mt-3\">\n    <div class=\"col-lg-12 text-center\">\n        <a href=\"https://allegro.pl/listing?string=smartwatch&bmatch=baseline-al-product-cl-eyesa2-engag-dict45-ele-1-3-0513\">\n          <img src=\"../../../assets/baner-reklamowy-allegro.png\" class=\"banner shadow-lg\"> \n        </a>\n    </div>\n</div>\n<div class=\"container my-4\">\n\n    <div class=\"text center\">\n        <h2>Znajdz osobę : {{pagination.totalItems}}</h2>\n    \n        <form class=\"form-inline\"  #form=\"ngForm\" (ngSubmit)=\"loadUsers()\" novalidate>\n\n            <div class=\"form-group\">\n                <label for=\"minAge \" style=\"margin: 15px;\">Wiek od: </label>\n                <input type=\"number\" class=\"form-control\" id=\"minAge\" name=\"minAge\" [(ngModel)]=\"userParams.minAge\">\n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"maxAge\" style=\"margin: 15px;\">Wiek do: </label>\n                <input type=\"number\" class=\"form-control\" id=\"maxAge\" name=\"maxAge\" [(ngModel)]=\"userParams.maxAge\">\n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"gender\" style=\"margin: 15px;\">Płeć: </label>\n                <select class=\"form-control\" id=\"gender\" name=\"gender\" [(ngModel)]=\"userParams.gender\">\n                    <option *ngFor=\"let gender of genderList\" [value]=\"gender.value\">\n                        {{gender.display}}\n                    </option>\n                </select>\n            </div>\n            \n            <button type=\"submit\" class=\"btn btn-primary m-2\">Szukaj</button>\n            <button type=\"button\" class=\"btn btn-info m-2\" (click)=\"resetFilters()\">Zresetuj</button>\n\n        </form>\n    </div>\n\n    <div class=\"row\">\n      \n            <div class=\"col-md-12\">\n                <div class=\"row \">\n                    <div *ngFor=\"let user of users\" class=\"mx-auto\">\n            \n                        <app-user-card [user]='user'></app-user-card>\n                    </div>\n                </div>\n            </div>\n    \n        <pagination [boundaryLinks]=\"true\" \n                    [totalItems]=\"pagination.totalItems\" \n                    [itemsPerPage]=\"pagination.itemsPerPage\"\n                    [(ngModel)]=\"pagination.currentPage\" \n                    (pageChanged)=\"pageChanged($event)\" \n                    previousText=\"&lsaquo;\"\n                    nextText=\"&rsaquo;\" lastText=\"&raquo;\"\n                   >\n        </pagination>\n        \n        <div class=\"ml-auto\">\n            <button type=\"button\"\n             btnRadio=\"lastActive\" \n             [(ngModel)]=\"userParams.orderBy\" \n             (click)=\"loadUsers()\" \n             class=\"btn btn-primary\" name=\"orderBy\" >Ostatnio aktywni</button>\n\n            <button type=\"button\" \n             btnRadio=\"created\"\n             [(ngModel)]=\"userParams.orderBy\"\n             (click)=\"loadUsers()\"\n             class=\"btn btn-primary\" name=\"orderBy\">Najnowsi członkowie</button>\n        </div>\n       \n    </div>\n\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Message } from 'src/app/_models/message';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-user-messages',\n  templateUrl: './user-messages.component.html',\n  styleUrls: ['./user-messages.component.css']\n})\nexport class UserMessagesComponent implements OnInit {\n\n  @Input() recipientId: number;\n  messages: Message[];\n  newMessage: any = {};\n\n\n  constructor(private userService: UserService,\n              private authService: AuthService,\n              private alertify: AlertifyService\n              ) { }\n\n  ngOnInit(): void {\n    this.loadMessages();\n  }\n\n  loadMessages() {\n    const currentUserId =  this.authService.decodedToken.nameid;\n    this.userService.GetMessageThread(this.authService.decodedToken.nameid, this.recipientId)\n    .pipe(\n      tap(messages => {\n        for(let i = 0; i < messages.length; i++) {\n          if(messages[i].isRead === false && messages[i].recipientId === currentUserId )\n             this.userService.MarkAsRead(currentUserId, messages[i].id);\n        }\n      })\n    )\n    .subscribe(messages => {\n       this.messages= messages;\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n  sendMessage() {\n    this.newMessage.recipientId =this.recipientId;\n    this.userService.SendMessage(this.authService.decodedToken.nameid, this.newMessage)\n       .subscribe((message: Message) => {\n         this.messages.unshift(message);\n         this.newMessage.content = '';\n       }, error => {\n         this.alertify.error(error);\n       });\n  }\n\n\n\n\n\n}\n","<div class=\"card\">\n    <div class=\"card-body\">\n        <div *ngIf=\"messages?.length === 0\">\n            Brak wiadomości ...\n        </div>\n        <ul class=\"chat\">\n            <li *ngFor=\"let message of messages\">\n                <!-- ja -->\n                <div *ngIf=\"message.senderId == recipientId\">\n                    <span class=\"chat-img float-left\">\n                        <img src=\"{{message.senderPhotoUrl}}\" alt=\"{{message.senderUsername}}\" class=\"rounded-circle\">\n                        <strong class=\"primary-font\">{{message.senderUsername | titlecase}}</strong>\n                    </span>\n                    <div class=\"chat-body\">\n                        <div class=\"header\">\n                            <small class=\"text-muted float-right\">\n                                <span class=\"fa fa-clock-o\">{{message.dateSend | timeAgo}}</span>\n                            </small>\n                        </div>\n                        <p>{{message.content}}</p>\n                    </div>\n                </div>\n\n\n                <!-- inni-->\n                <div *ngIf=\"message.senderId != recipientId\">\n                    <span class=\"chat-img float-right\">\n                        <strong class=\"primary-font\">{{message.senderUsername | titlecase}}</strong>\n                        <img src=\"{{message.senderPhotoUrl}}\" alt=\"{{message.senderUsername}}\" class=\"rounded-circle\">\n                    </span>\n                    <div class=\"chat-body\">\n                        <div class=\"header\">\n                            <small class=\"text-muted float-left\">\n                                <span class=\"fa fa-clock-o\">{{message.dateSend | timeAgo }}</span>\n                                <span *ngIf=\"!message.isRead\" class=\"text-danger\">(nie przeczytane)</span>\n                                <span *ngIf=\"message.isRead\"\n                                    class=\"text-success\">(przeczytane){{message.dataRead | timeAgo }}</span>\n                            </small>\n                        </div>\n                        <p>{{message.content}}</p>\n                    </div>\n                </div>\n            </li>\n        </ul>\n    </div>\n    <div class=\"card-footer\">\n        <form #messageForm=\"ngForm\" (ngSubmit)=\"messageForm.valid && sendMessage()\">\n            <div class=\"input-group\">\n                <input type=\"text\" \n                       class=\"form-control input-sm\" \n                       placeholder=\"Wyślij prywatną wiadomości\"\n                       [(ngModel)]=\"newMessage.content\"\n                       name=\"content\"\n                       required>\n                <div class=\"input-group-append\">\n                    <button class=\"btn btn-primary\" [disabled]=\"!messageForm.valid\">Wyślij</button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n\n\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Photo } from '../../_models/photo';\nimport { FileUploader } from 'ng2-file-upload';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { UserService } from 'src/app/_services/user.service';\n\n@Component({\n  selector: 'app-user-photos',\n  templateUrl: './user-photos.component.html',\n  styleUrls: ['./user-photos.component.css']\n})\nexport class UserPhotosComponent implements OnInit {\n\n  @Input() photos: Photo[];\n  @Output() getUserPhotoChange = new EventEmitter<string>();\n \n  uploader:FileUploader;\n  hasBaseDropZoneOver = false;\n  baseUrl = environment.apiUrl;\n  currentMain: Photo;\n  \n\n  constructor(private authService: AuthService,\n              private userService: UserService,\n              private alertify: AlertifyService) { }\n\n  ngOnInit(): void {\n    this.initializeUploader();\n\n  }\n\n  public fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n\n  initializeUploader() {\n    this.uploader = new FileUploader({\n      url: this.baseUrl + 'users/' + this.authService.decodedToken.nameid + '/photos',\n      authToken: 'Bearer ' + localStorage.getItem('token'),\n      isHTML5: true,\n      allowedFileType: ['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 10 * 1024 * 1024\n    });\n\n    this.uploader.onAfterAddingFile = (file) => { file.withCredentials = false; };\n\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n      if (response) {\n        const res: Photo = JSON.parse(response);\n        const photo = {\n          id: res.id,\n          url: res.url,\n          dateAdded: res.dateAdded,\n          description: res.description,\n          mainPhoto: res.mainPhoto\n        };\n        this.photos.push(photo);\n        if(photo.mainPhoto){\n          this.authService.changeUserPhoto(photo.url);\n          this.authService.currentUser.photoUrl = photo.url;\n          localStorage.setItem('user', JSON.stringify(this.authService.currentUser));\n         }\n      }\n    };\n\n  }\n\n\n  setMainPhoto(photo: Photo) {\n    this.userService.SetMainPhoto(this.authService.decodedToken.nameid, photo.id).subscribe(() => {\n      console.log('Sukces, zdjęcie ustawione jako główne');\n      if (this.currentMain = this.photos.filter(p => p.mainPhoto === true)[0]) {\n        this.currentMain.mainPhoto = false;\n      }\n      photo.mainPhoto = true;\n      this.authService.changeUserPhoto(photo.url);\n      this.authService.currentUser.photoUrl = photo.url;\n      localStorage.setItem('user', JSON.stringify(this.authService.currentUser));\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n  deletePhoto(id: number) {\n    this.alertify.confirm('Czy jesteś pewien że chcesz usunąć to zdjęcie', () => {\n      this.userService.DeletePhoto(this.authService.decodedToken.nameid, id).subscribe(() => {\n         this.photos.splice(this.photos.findIndex(p => p.id === id), 1);\n         this.alertify.success(\"Zdjęcie zostało usunięte\");\n      }, error => {\n        this.alertify.error(\"Nie udało się usunąć zdjęcia\");\n      })\n    });\n  }\n\n\n\n\n}\n\n\n","<div class=\"row p-2\">\n   <div class=\"col-sm-3\" *ngFor=\"let photo of photos\">\n       <img src=\"{{photo.url}}\" alt=\"{{photo.description}}\"  class=\"img-thumbnail\">\n       <div class=\"text-center mb-3 mt-1\">\n         <button type=\"button\" class=\"btn btn-sm \" \n         (click)=\"setMainPhoto(photo)\"\n         [ngClass]=\"photo.mainPhoto ? 'btn-success active' : 'btn-info' \"\n         [disabled]=\"photo.mainPhoto\"><i class=\"fa fa-user-circle\"></i> Główne</button>\n         <button type=\"button\" class=\"btn btn-sm btn-danger\"\n         [disabled]=\"photo.mainPhoto\"\n         (click)=\"deletePhoto(photo.id)\"><i class=\"fa fa-trash-o\"></i></button>\n       </div>\n   </div>\n</div>\n\n<div class=\"container\">\n    <div class=\"row mt-3\">\n\n        <div class=\"col-md-3\">\n            <h3>Wybierz plik</h3>\n\n            <div ng2FileDrop \n            [ngClass]=\"{'nv-file-over': hasBaseDropZoneOver}\" \n            (fileOver)=\"fileOverBase($event)\"\n            [uploader]=\"uploader\" \n            class=\"card bg-faded p-3 text-center my-drop-zone\">\n            <i class=\"fa fa-upload fa-3x \"></i>\n                Miejsce zrzutu zdjęcia\n            </div>\n            Wiele plików\n            <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple /><br />\n\n            Pojedyńczy plik\n            <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\n        </div>\n\n        <div class=\"col-md-9\" style=\"margin-bottom: 40px\" *ngIf=\"uploader?.queue?.length\">\n\n            <h3>Kolejka przesyłania</h3>\n            <p>Wielkość kolejki: {{ uploader?.queue?.length }}</p>\n\n            <table class=\"table\">\n                <thead>\n                    <tr>\n                        <th width=\"50%\">Nazwa</th>\n                        <th>Rozmiar</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let item of uploader.queue\">\n                        <td><strong>{{ item?.file?.name }}</strong></td>\n                        <td *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\n                    </tr>\n                </tbody>\n            </table>\n\n            <div>\n                <div>\n                    Postęp w kolejce:\n                    <div class=\"progress mb-4\">\n                        <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\n                    </div>\n                </div>\n                <button type=\"button\" class=\"btn btn-success btn-s\" (click)=\"uploader.uploadAll()\"\n                    [disabled]=\"!uploader.getNotUploadedItems().length\">\n                    <span class=\"fa fa-upload \"></span> Wyślij\n                </button>\n                <button type=\"button\" class=\"btn btn-warning btn-s\" (click)=\"uploader.cancelAll()\"\n                    [disabled]=\"!uploader.isUploading\">\n                    <span class=\"fa fa-ban\"></span> Anuluj\n                </button>\n                <button type=\"button\" class=\"btn btn-danger btn-s\" (click)=\"uploader.clearQueue()\"\n                    [disabled]=\"!uploader.queue.length\">\n                    <span class=\"fa fa-trash\"></span> Usuń\n                </button>\n            </div>\n\n        </div>\n\n    </div>\n\n    \n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:5000/api/'\n\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}